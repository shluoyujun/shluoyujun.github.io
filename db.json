{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"source/img/Java内存模型.png","path":"img/Java内存模型.png","modified":0,"renderable":0},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"source/img/java异常分类.png","path":"img/java异常分类.png","modified":0,"renderable":0},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1588677217737},{"_id":"themes/next/bower.json","hash":"0674f11d3d514e087a176da0e1d85c2286aa5fba","modified":1588677217737},{"_id":"themes/next/README.cn.md","hash":"263b74f1ac7c0f6f9424b8cced4b0b320ae61efc","modified":1588677217737},{"_id":"themes/next/README.md","hash":"287c7e6b7a6ddf75d815dda0df8bd228e3f285c5","modified":1588677217737},{"_id":"themes/next/_config.yml","hash":"0f532d141ad479be2292b04971825a0ab86baf3c","modified":1588677217737},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1588677217737},{"_id":"themes/next/package.json","hash":"036d3a1346203d2f1a3958024df7f74e7ac07bfe","modified":1588677217745},{"_id":"source/_posts/Hadoop生态圈介绍.md","hash":"f28387b4afc1510c7e5827db1e4b6e3831e127a6","modified":1588677217721},{"_id":"source/_posts/Hexo+GIthub多设备同步.md","hash":"f22d1d6b0d00f05ddd3ce43a4e29c44b6defecdb","modified":1588677217721},{"_id":"source/_posts/JMockit单元测试.md","hash":"faedcfa8427ba9877d0b3e5225edf2ddf0dbdfc2","modified":1588677217721},{"_id":"source/_posts/Java内存模型.md","hash":"6657cfea88297d02242118108a5324bdfed9c835","modified":1588677217721},{"_id":"source/_posts/Java反射初识.md","hash":"48f3e4334a85066a0e34eee26a3abf5e1b276e60","modified":1588677217721},{"_id":"source/_posts/Java异常处理最佳实践.md","hash":"2172c5d5bb16714ad297832dfb6fb6c60bcd67f6","modified":1588677217721},{"_id":"source/_posts/docker常用命令.md","hash":"9ce8e88707e9e58211b7ace75418ba8cb5c3c7b7","modified":1588677217721},{"_id":"source/_posts/eclipse导入maven-web项目注意事项.md","hash":"607554170413a927e3ff529b7e868d8c6a413bfb","modified":1588677217721},{"_id":"source/_posts/emptydir与hostpath.md","hash":"939c5ab2dcff84cc238049581d0ed49875f3174e","modified":1588677217722},{"_id":"source/_posts/jvm学习路线.md","hash":"82e09491a01b5b6067d253aca10f4ec92c982315","modified":1588677217722},{"_id":"source/_posts/keystore和truststore.md","hash":"102c70ef779515566497f1e0073252bfa9a811c0","modified":1588677375246},{"_id":"source/_posts/mysql一种千万数量级表的join方法.md","hash":"900d0ba149cba81d4cb7740eda82863e53233c3d","modified":1588677217722},{"_id":"source/_posts/mysql批量插入数据.md","hash":"c2b16d07d4546b0d4862548fdf485a0950c17806","modified":1588677217722},{"_id":"source/_posts/python开发环境配置.md","hash":"fd3a2e5d672121332b4e83e51775f1f3d5225eae","modified":1588677217722},{"_id":"source/_posts/ubuntu14-04安装fasttext.md","hash":"ea9bb728b1ca3366ea4e0522d9894cff0dccf7fb","modified":1588677217722},{"_id":"source/_posts/ubuntu安装mysql并开启远程连接.md","hash":"f7979fe9c0a911992a99109da83d16284c02885b","modified":1588677217722},{"_id":"source/_posts/ubuntu系统mysql修改数据存储位置.md","hash":"ed85557b818fb2d3f4dd939a7d37099324bdcc77","modified":1588677217722},{"_id":"source/_posts/初识sssd-ldap和kerberos.md","hash":"522dbba9f6313ccd35e2c0ca7b7d5d1ffc915422","modified":1588677217722},{"_id":"source/_posts/记事本编码问题小记.md","hash":"849b8f7d04ed10408ac788118e970f6b39422c12","modified":1588677217723},{"_id":"source/about/index.md","hash":"9c8c921169e72b2f6a86f87f0bd26c62da777542","modified":1588677217723},{"_id":"source/categories/index.md","hash":"a408cd2e2a9251417827c4781b8fc07c02cdc63c","modified":1588677217723},{"_id":"source/tags/index.md","hash":"c645dcfaa9be0a5ef0104430eceae8cf3c86d91e","modified":1588677217726},{"_id":"themes/next/languages/de.yml","hash":"057e7df11ddeb1c8c15a5d7c5ff29430d725ec6b","modified":1588677217738},{"_id":"themes/next/languages/default.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1588677217738},{"_id":"themes/next/languages/en.yml","hash":"7e680d9bb8f3a3a9d1ba1c9d312b3d257183dded","modified":1588677217738},{"_id":"themes/next/languages/fr-FR.yml","hash":"7e4eb7011b8feee641cfb11c6e73180b0ded1c0f","modified":1588677217738},{"_id":"themes/next/languages/id.yml","hash":"b5de1ea66dd9ef54cac9a1440eaa4e3f5fc011f5","modified":1588677217738},{"_id":"themes/next/languages/it.yml","hash":"aa595f2bda029f73ef7bfa104b4c55c3f4e9fb4c","modified":1588677217738},{"_id":"themes/next/languages/ja.yml","hash":"3c76e16fd19b262864475faa6854b718bc08c4d8","modified":1588677217738},{"_id":"themes/next/languages/ko.yml","hash":"ea5b46056e73ebcee121d5551627af35cbffc900","modified":1588677217738},{"_id":"themes/next/languages/nl-NL.yml","hash":"edca4f3598857dbc3cbf19ed412213329b6edd47","modified":1588677217738},{"_id":"themes/next/languages/pt-BR.yml","hash":"b1694ae766ed90277bcc4daca4b1cfa19cdcb72b","modified":1588677217738},{"_id":"themes/next/languages/pt.yml","hash":"44b61f2d085b827b507909a0b8f8ce31c6ef5d04","modified":1588677217738},{"_id":"themes/next/languages/ru.yml","hash":"98ec6f0b7183282e11cffc7ff586ceb82400dd75","modified":1588677217738},{"_id":"themes/next/languages/vi.yml","hash":"fd08d3c8d2c62965a98ac420fdaf95e54c25d97c","modified":1588677217739},{"_id":"themes/next/languages/zh-Hans.yml","hash":"16ef56d0dea94638de7d200984c90ae56f26b4fe","modified":1588677217739},{"_id":"themes/next/languages/zh-hk.yml","hash":"9396f41ae76e4fef99b257c93c7354e661f6e0fa","modified":1588677217739},{"_id":"themes/next/languages/zh-tw.yml","hash":"50b71abb3ecc0686f9739e179e2f829cd074ecd9","modified":1588677217739},{"_id":"themes/next/layout/_layout.swig","hash":"da0929166674ea637e0ad454f85ad0d7bac4aff2","modified":1588677217739},{"_id":"themes/next/layout/archive.swig","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1588677217745},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1588677217745},{"_id":"themes/next/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1588677217745},{"_id":"themes/next/layout/page.swig","hash":"969caaee05bdea725e99016eb63d810893a73e99","modified":1588677217745},{"_id":"themes/next/layout/post.swig","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1588677217745},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1588677217745},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1588677217745},{"_id":"themes/next/scripts/merge-configs.js","hash":"81e86717ecfb775986b945d17f0a4ba27532ef07","modified":1588677217746},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1588677217746},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1588677217774},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1588677217774},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1588677217774},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1588677217756},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1588677217739},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1588677217739},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1588677217739},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"665a928604f99d2ba7dc4a4a9150178229568cc6","modified":1588677217739},{"_id":"themes/next/layout/_macro/post.swig","hash":"446a35a2cd389f8cfc3aa38973a9b44ad0740134","modified":1588677217740},{"_id":"themes/next/layout/_macro/reward.swig","hash":"56e8d8556cf474c56ae1bef9cb7bbd26554adb07","modified":1588677217740},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"6a54c3c85ff6b19d275827a327abbf4bd99b2ebf","modified":1588677217740},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1588677217740},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4a6f5b1792b2e5262b7fdab9a716b3108e2f09c7","modified":1588677217740},{"_id":"themes/next/layout/_partials/footer.swig","hash":"c4d6181f5d3db5365e622f78714af8cc58d7a45e","modified":1588677217740},{"_id":"themes/next/layout/_partials/head.swig","hash":"6b94fe8f3279daea5623c49ef4bb35917ba57510","modified":1588677217740},{"_id":"themes/next/layout/_partials/header.swig","hash":"ed042be6252848058c90109236ec988e392d91d4","modified":1588677217740},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1588677217740},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1588677217740},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1588677217740},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1588677217741},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1588677217741},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"a266f96ad06ee87bdeae6e105a4b53cd587bbd04","modified":1588677217742},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1588677217744},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1588677217744},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1588677217744},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"5fe0447cc88a5a63b530cf0426f93c4634811876","modified":1588677217744},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1588677217744},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1588677217744},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1588677217744},{"_id":"themes/next/scripts/tags/button.js","hash":"d023f10a00077f47082b0517e2ad666e6e994f60","modified":1588677217746},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1588677217746},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1588677217746},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1588677217746},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1588677217746},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1588677217746},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1588677217746},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1588677217746},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1588677217747},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1588677217756},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1588677217756},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1588677217756},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1588677217756},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1588677217756},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1588677217756},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1588677217757},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1588677217757},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1588677217757},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1588677217757},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1588677217757},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1588677217757},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1588677217757},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1588677217757},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1588677217757},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1588677217757},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1588677217757},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1588677217758},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1588677217758},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1588677217742},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1588677217742},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1588677217753},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1588677217753},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1588677217753},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1588677217756},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1588677217756},{"_id":"source/img/Java内存模型.png","hash":"4325e038c7b558d206992409b030f9f9c46a7a73","modified":1588677217724},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1588677217740},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1588677217740},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1588677217741},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1588677217741},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1588677217741},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1588677217741},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1588677217741},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1588677217741},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1588677217741},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1588677217741},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1588677217742},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1588677217742},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1588677217742},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1588677217742},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1588677217742},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1588677217742},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1588677217742},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1588677217742},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"1cd01c6e92ab1913d48e556a92bb4f28b6dc4996","modified":1588677217742},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1588677217742},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1588677217743},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1588677217743},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1588677217743},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1588677217743},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1588677217743},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1588677217743},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1588677217743},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1588677217743},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"10160daceaa6f1ecf632323d422ebe2caae49ddf","modified":1588677217743},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1588677217743},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"aa0629277d751c55c6d973e7691bf84af9b17a60","modified":1588677217743},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1588677217743},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"fcabbb241f894c9a6309c44e126cf3e8fea81fd4","modified":1588677217743},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1588677217744},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1588677217744},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1588677217745},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1588677217745},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1588677217745},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1588677217753},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1588677217753},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"9ab65361ba0a12a986edd103e56492644c2db0b8","modified":1588677217753},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1588677217753},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"99fbb4686ea9a3e03a4726ed7cf4d8f529034452","modified":1588677217755},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1588677217756},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"f29165e36489a87ba32d17dddfd2720d84e3f3ec","modified":1588677217756},{"_id":"themes/next/source/css/_variables/base.styl","hash":"29c261fa6b4046322559074d75239c6b272fb8a3","modified":1588677217756},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1588677217758},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1588677217758},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1588677217758},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1588677217758},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1588677217758},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1588677217758},{"_id":"themes/next/source/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1588677217758},{"_id":"themes/next/source/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1588677217758},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1588677217759},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1588677217759},{"_id":"themes/next/source/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1588677217759},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1588677217760},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1588677217762},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1588677217762},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1588677217762},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1588677217762},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1588677217764},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1588677217764},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1588677217764},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1588677217764},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1588677217765},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1588677217765},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1588677217765},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1588677217765},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1588677217765},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1588677217768},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1588677217768},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1588677217768},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1588677217768},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1588677217768},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1588677217769},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1588677217769},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1588677217769},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1588677217769},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1588677217769},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1588677217769},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1588677217769},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1588677217769},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1588677217770},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1588677217770},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1588677217770},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1588677217770},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1588677217770},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1588677217770},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1588677217770},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1588677217770},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1588677217770},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1588677217770},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1588677217770},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1588677217771},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1588677217771},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1588677217771},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1588677217773},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1588677217773},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1588677217774},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1588677217774},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1588677217774},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1588677217768},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1588677217744},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1588677217744},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1588677217747},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1588677217747},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1588677217747},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1588677217747},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1588677217747},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1588677217748},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1588677217751},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1588677217752},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"f7c44b0ee46cf2cf82a4c9455ba8d8b55299976f","modified":1588677217752},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1588677217753},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1588677217753},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1588677217753},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1588677217753},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1588677217753},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"18c3336ee3d09bd2da6a876e1336539f03d5a973","modified":1588677217754},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1588677217754},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1588677217754},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1588677217754},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1588677217754},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1588677217754},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1588677217754},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1588677217754},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1588677217754},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1588677217755},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"4aac01962520d60b03b23022ab601ad4bd19c08c","modified":1588677217755},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1588677217755},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1588677217755},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1588677217755},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1588677217755},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1588677217755},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1588677217755},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"9d16fa3c14ed76b71229f022b63a02fd0f580958","modified":1588677217755},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1588677217755},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1588677217760},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1588677217758},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1588677217762},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1588677217763},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1588677217763},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1588677217763},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1588677217763},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1588677217763},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1588677217763},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1588677217764},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1588677217764},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1588677217764},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1588677217764},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1588677217765},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1588677217765},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1588677217765},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1588677217773},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1588677217773},{"_id":"source/img/java异常分类.png","hash":"fce9e87dbdaee64ce8482e5f40966bfdbad8f93c","modified":1588677217726},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1588677217760},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1588677217760},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1588677217760},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1588677217767},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1588677217768},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1588677217774},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1588677217747},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1588677217748},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"25dc25f61a232f03ca72472b7852f882448ec185","modified":1588677217748},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1588677217748},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1588677217747},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1588677217747},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1588677217747},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1588677217747},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1588677217748},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1588677217748},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1588677217748},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1588677217748},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1588677217748},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1588677217748},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1588677217749},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"535b3b4f8cb1eec2558e094320e7dfb01f94c0e7","modified":1588677217749},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1588677217749},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1588677217749},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1588677217749},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"aea21141015ca8c409d8b33e3e34ec505f464e93","modified":1588677217749},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1588677217749},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1588677217749},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1588677217749},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1588677217749},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1588677217749},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1588677217750},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1588677217750},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"262debfd4442fa03d9919ceb88b948339df03fb0","modified":1588677217750},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1588677217749},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1588677217750},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1588677217750},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1588677217750},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1588677217750},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1588677217750},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1588677217750},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"12937cae17c96c74d5c58db6cb29de3b2dfa14a2","modified":1588677217750},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1588677217750},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"50305b6ad7d09d2ffa4854e39f41ec1f4fe984fd","modified":1588677217751},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1588677217751},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1588677217751},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1588677217751},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"37e951e734a252fe8a81f452b963df2ba90bfe90","modified":1588677217751},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1588677217751},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1588677217751},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1588677217751},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1588677217751},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1588677217751},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1588677217751},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1588677217752},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1588677217752},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1588677217752},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1588677217752},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1588677217752},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1588677217752},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1588677217752},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1588677217752},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1588677217752},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1ccfbd4d0f5754b2dc2719a91245c95f547a7652","modified":1588677217752},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1588677217754},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1588677217754},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1588677217755},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1588677217759},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1588677217759},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1588677217759},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1588677217759},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1588677217759},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1588677217763},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1588677217763},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1588677217763},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1588677217763},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1588677217763},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1588677217763},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1588677217766},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1588677217766},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1588677217767},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1588677217762},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1588677217772},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1588677217767},{"_id":"public/about/index.html","hash":"480944bb837031044763a1b87b74f92a7a332e48","modified":1588678116934},{"_id":"public/tags/index.html","hash":"31fd62c789a5926eb9dbd32ec4afaf006440e9b2","modified":1588678116934},{"_id":"public/categories/index.html","hash":"dfc3198a8ecd38035c9351b7cf984ceb9cec16f1","modified":1588678116934},{"_id":"public/2019/09/10/keystore和truststore/index.html","hash":"444cbfedba1fc4d13e5d255526240b2b1763e165","modified":1588678116934},{"_id":"public/2019/09/01/emptydir与hostpath/index.html","hash":"18dd0349960a24a6dcb090b150d687273a3af30f","modified":1588678116934},{"_id":"public/2019/07/09/Java内存模型/index.html","hash":"37334516b6264a1237d4da05f4a4f54f67041c4b","modified":1588678116934},{"_id":"public/2019/06/23/Java反射初识/index.html","hash":"86a11becd48c4c265f5e27f7463d7047708b4ce4","modified":1588678116934},{"_id":"public/2019/06/07/jvm学习路线/index.html","hash":"419d9774bcde8d3a7c9e173dc48b3b5cc72076d1","modified":1588678116934},{"_id":"public/2018/06/23/python开发环境配置/index.html","hash":"92f92877c3a1bcb2afed14753990ccbd36880a4f","modified":1588678116934},{"_id":"public/2017/07/18/mysql一种千万数量级表的join方法/index.html","hash":"34e7d9c21481a0fe79b516e4eeb19fef7fb38792","modified":1588678116934},{"_id":"public/2017/07/18/mysql批量插入数据/index.html","hash":"d13a32dce653531494d315d3cfe6cbd7a7b3a0c1","modified":1588678116934},{"_id":"public/2017/06/16/ubuntu安装mysql并开启远程连接/index.html","hash":"a4e86b16ce38968276c6327a7924b06516e3a87b","modified":1588678116934},{"_id":"public/2017/06/16/ubuntu14-04安装fasttext/index.html","hash":"d5800f04d17a76ca2649e372aa9963d2799324de","modified":1588678116934},{"_id":"public/archives/2017/index.html","hash":"62772230eee958d337f48454f3d8e6623578acfb","modified":1588678116934},{"_id":"public/archives/2017/04/index.html","hash":"5f5ff407d4f0bdcac116a64fad856e775e4be254","modified":1588678116934},{"_id":"public/archives/2017/06/index.html","hash":"13d4d12b5c13b41b8b805ac9b8cbd03703253532","modified":1588678116935},{"_id":"public/archives/2017/07/index.html","hash":"1f5ca7faf5f7bec36b98b7a36fdb75e94a01d3a7","modified":1588678116935},{"_id":"public/archives/2017/08/index.html","hash":"f7a7d4cf9a8f962333bdecbdc0cb34e702c6975c","modified":1588678116935},{"_id":"public/archives/2018/index.html","hash":"0b3244e98bc0cb3a1bb88a36927d5a91a27de5ba","modified":1588678116935},{"_id":"public/archives/2018/06/index.html","hash":"c6e6cfdf142879c3c069ae7b917f073bc02de322","modified":1588678116935},{"_id":"public/archives/2019/06/index.html","hash":"d5b6d5dffcdf1a37a7da3f2ed405bbd2d597c10a","modified":1588678116935},{"_id":"public/archives/2019/07/index.html","hash":"aa8bc0c8f0392e16f5a73ef365a5d3c7b7974c7f","modified":1588678116935},{"_id":"public/archives/2019/08/index.html","hash":"4733bf8bac8e6298df5f95daab4c8a65d186891a","modified":1588678116935},{"_id":"public/archives/2019/09/index.html","hash":"0948cf03aacf9486d8dbe49e3cf3ded322a631a9","modified":1588678116935},{"_id":"public/tags/Hadoop/index.html","hash":"38216d9feb27c3271a137214ad7f15a5cc93ce29","modified":1588678116935},{"_id":"public/tags/hexo/index.html","hash":"723c9d4c458ed28e6c61daa93ac8de3fb63c891f","modified":1588678116935},{"_id":"public/tags/github/index.html","hash":"a5037054be4b3cb2ad40aa178f0003349d347456","modified":1588678116935},{"_id":"public/tags/java/index.html","hash":"2191bc366be734395b5a688b8e42953a25733e3a","modified":1588678116935},{"_id":"public/tags/testing/index.html","hash":"0d51170a8357ff362924f51e5c1367b2d961ccb2","modified":1588678116935},{"_id":"public/tags/JMockit/index.html","hash":"89417ee6cb53155795118f26f0f528e0531108f1","modified":1588678116935},{"_id":"public/tags/jvm/index.html","hash":"687f36e46203be9d1de5f6378e44004952536928","modified":1588678116935},{"_id":"public/tags/reflect/index.html","hash":"bf062edbf8c9c4eee3ed110c62c982f1646801d8","modified":1588678116935},{"_id":"public/tags/exception/index.html","hash":"f2b7245a3a12009f178c483962558de3d1370be4","modified":1588678116935},{"_id":"public/tags/linux/index.html","hash":"b52c52d6acc8483823900c700b4f8ebb4753dfb1","modified":1588678116935},{"_id":"public/tags/docker/index.html","hash":"fb6141c867161aca8f87753a808a6fbc961e9d80","modified":1588678116935},{"_id":"public/tags/web/index.html","hash":"8519355dc332635b0ae3827a2806a2e853c00d3d","modified":1588678116935},{"_id":"public/tags/eclipse/index.html","hash":"a844d5747185573d416f15b266acf2d8c3956e0e","modified":1588678116935},{"_id":"public/tags/mysql/index.html","hash":"3296fccf58f65104f33a9a0657e2e2954e69505a","modified":1588678116935},{"_id":"public/tags/ubuntu/index.html","hash":"d8a86f0db8d3c9a81db6fa50e9b829f7ac9dcc0e","modified":1588678116935},{"_id":"public/tags/python/index.html","hash":"b172130becbf7c8ce00f73e7aae6c7b44f1ea8ff","modified":1588678116935},{"_id":"public/tags/deeplearning/index.html","hash":"782305c9bfc6c61c21e124725739236dabebbe07","modified":1588678116935},{"_id":"public/tags/tool/index.html","hash":"e4bc4c67a9875b92d7cfaac1a8f445ba53a9fe53","modified":1588678116935},{"_id":"public/categories/bigData/index.html","hash":"dddcf5d716812647f9f40337e5e2dd96e6b7bbc9","modified":1588678116935},{"_id":"public/categories/environment/index.html","hash":"9735e802ef824c178b5001fbb59a3a0c81dd308e","modified":1588678116936},{"_id":"public/categories/testing/index.html","hash":"92b6d904dd326d492747b6b35015d80ffb7bbcb4","modified":1588678116936},{"_id":"public/categories/developing/index.html","hash":"8d574deb4f23da873cd1a1d2ae223816385bdeb3","modified":1588678116936},{"_id":"public/categories/command/index.html","hash":"26a296d2fca3efc695992c1c38ffd6a567a14360","modified":1588678116936},{"_id":"public/categories/security/index.html","hash":"1abad7385e96d052818f04e7f4fc1cce0cabcd2f","modified":1588678116936},{"_id":"public/categories/performance/index.html","hash":"5957b2776212df522e3be1acee3876465d076213","modified":1588678116936},{"_id":"public/2019/08/01/初识sssd-ldap和kerberos/index.html","hash":"75e28dde96e399cdcc2ce65bc42ba43dc064d74f","modified":1588678116936},{"_id":"public/2019/07/06/Java异常处理最佳实践/index.html","hash":"437d9bc707cb4471d814b6bd78bd0f2ef4a5ff93","modified":1588678116936},{"_id":"public/2019/07/03/JMockit单元测试/index.html","hash":"e82c4e6d50bf9536974f8a959b4c7a92e9d9f056","modified":1588678116936},{"_id":"public/2019/06/29/Hadoop生态圈介绍/index.html","hash":"50088d4f1ac6188e7db5e71b34edfeba9d897705","modified":1588678116936},{"_id":"public/2019/06/02/Hexo+GIthub多设备同步/index.html","hash":"db8cd772b517e0d740e7b44cbea61f3dbdb797d0","modified":1588678116936},{"_id":"public/2017/08/18/ubuntu系统mysql修改数据存储位置/index.html","hash":"164def2a5dd373ca39e8aa2574a97f0dc6750c6a","modified":1588678116936},{"_id":"public/2017/08/05/docker常用命令/index.html","hash":"c941e4f416fe40649b636f7f61d148577dc13afd","modified":1588678116936},{"_id":"public/2017/04/29/eclipse导入maven-web项目注意事项/index.html","hash":"8b456f5226ce2b039ff53c53344494e99b74a4b9","modified":1588678116936},{"_id":"public/2017/04/02/记事本编码问题小记/index.html","hash":"839d7be5f6be9aff9abc3216440ebf91a3b18b65","modified":1588678116936},{"_id":"public/archives/index.html","hash":"6a8d142a3c3c4a7b5a124cab651d6dd1a0b1baa3","modified":1588678116936},{"_id":"public/archives/page/2/index.html","hash":"2d2e8b34a0825d410f453e70f07e0698ced0cc02","modified":1588678116936},{"_id":"public/archives/2019/index.html","hash":"3f062dccfd9975eb785872585b5c0a13d09def79","modified":1588678116936},{"_id":"public/index.html","hash":"800d193d9487268d8d74b89bcdeb135c8755a5c9","modified":1588678116936},{"_id":"public/page/2/index.html","hash":"f0c3ec2f3a94548c9a54ca74006ae7a45f66be02","modified":1588678116936},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1588678116945},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1588678116945},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1588678116946},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1588678116946},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1588678116946},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1588678116946},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1588678116946},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1588678116946},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1588678116946},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1588678116946},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1588678116946},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1588678116946},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1588678116946},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1588678116946},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1588678116946},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1588678116946},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1588678116946},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1588678116946},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1588678116946},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1588678116946},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1588678116947},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1588678116947},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1588678116947},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1588678116947},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1588678116947},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1588678116947},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1588678116947},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1588678116947},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1588678116947},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1588678116947},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1588678116947},{"_id":"public/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1588678116947},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1588678117245},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1588678117248},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1588678117252},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1588678117259},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1588678117260},{"_id":"public/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1588678117260},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1588678117260},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1588678117260},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1588678117260},{"_id":"public/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1588678117260},{"_id":"public/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1588678117260},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1588678117260},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1588678117260},{"_id":"public/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1588678117260},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1588678117260},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1588678117261},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1588678117261},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1588678117261},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1588678117261},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1588678117261},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1588678117261},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1588678117261},{"_id":"public/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1588678117261},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1588678117261},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1588678117261},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1588678117261},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1588678117261},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1588678117261},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1588678117261},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1588678117261},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1588678117261},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1588678117261},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1588678117261},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1588678117261},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1588678117261},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1588678117262},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1588678117262},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1588678117262},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1588678117262},{"_id":"public/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1588678117262},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1588678117262},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1588678117262},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1588678117262},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1588678117262},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1588678117262},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1588678117262},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1588678117262},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1588678117262},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1588678117262},{"_id":"public/lib/fastclick/README.html","hash":"287b2e24cae1f7d01877dda79b76c24f81123895","modified":1588678117262},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1588678117262},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bfb6e229fc36e493d45499b4ac30a7c298786ab4","modified":1588678117262},{"_id":"public/css/main.css","hash":"a2940f700557be9c561da5e5be1a7b72676490ca","modified":1588678117262},{"_id":"public/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1588678117262},{"_id":"public/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1588678117262},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1588678117262},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1588678117262},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1588678117263},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1588678117263},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1588678117263},{"_id":"public/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1588678117263},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1588678117263},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1588678117263},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1588678117263},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1588678117263},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1588678117263},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1588678117263},{"_id":"public/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1588678117263},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1588678117263},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1588678117263},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1588678117264},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1588678117264},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1588678117264},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1588678117264},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1588678117265},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1588678117268},{"_id":"public/img/Java内存模型.png","hash":"4325e038c7b558d206992409b030f9f9c46a7a73","modified":1588678117271},{"_id":"public/img/java异常分类.png","hash":"fce9e87dbdaee64ce8482e5f40966bfdbad8f93c","modified":1588678117299},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1588678117301}],"Category":[{"name":"bigData","_id":"ck9ttxja1000483lzjyuwmyb9"},{"name":"environment","_id":"ck9ttxja6000a83lzvx08cnyo"},{"name":"testing","_id":"ck9ttxjab000g83lzh7zyln69"},{"name":"developing","_id":"ck9ttxjad000l83lzzrw6yent"},{"name":"command","_id":"ck9ttxjam001483lzl1xiy38n"},{"name":"security","_id":"ck9ttxjao001d83lzj5surov2"},{"name":"performance","_id":"ck9ttxjaq001k83lzgn75sf7a"}],"Data":[],"Page":[{"title":"about","date":"2017-06-08T15:12:20.000Z","_content":"\nKeep healthy\nWork hard\nBe nice\n\nContact me: shh_luoyj@foxmail.com","source":"about/index.md","raw":"---\ntitle: about\ndate: 2017-06-08 23:12:20\n---\n\nKeep healthy\nWork hard\nBe nice\n\nContact me: shh_luoyj@foxmail.com","updated":"2020-05-05T11:13:37.723Z","path":"about/index.html","comments":1,"layout":"page","_id":"ck9ttxj9y000183lzcogxle3h","content":"<p>Keep healthy<br>Work hard<br>Be nice</p>\n<p>Contact me: <a href=\"mailto:shh_luoyj@foxmail.com\" target=\"_blank\" rel=\"noopener\">shh_luoyj@foxmail.com</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Keep healthy<br>Work hard<br>Be nice</p>\n<p>Contact me: <a href=\"mailto:shh_luoyj@foxmail.com\" target=\"_blank\" rel=\"noopener\">shh_luoyj@foxmail.com</a></p>\n"},{"title":"tags","date":"2017-06-08T15:12:35.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2017-06-08 23:12:35\ntype: \"tags\"\ncomments: false\n---\n","updated":"2020-05-05T11:13:37.726Z","path":"tags/index.html","layout":"page","_id":"ck9ttxja0000383lzao8ww21f","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"categories","date":"2017-06-08T15:12:43.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2017-06-08 23:12:43\ntype: \"categories\"\ncomments: false\n---\n","updated":"2020-05-05T11:13:37.723Z","path":"categories/index.html","layout":"page","_id":"ck9ttxja3000783lzsc698kas","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Hadoop生态圈介绍","date":"2019-06-29T10:20:04.000Z","_content":"作为Hadoop集群的运维工程师，学习Hadoop的目的是为了解业务。\n<!-- more --> \n# Hive\n+ Hive是一个数据仓库，存储大数据，主要用来做OLAP分析.\n+ Hive定义了一种类似SQL的查询语言（HQL），将SQL转化为MapReduce任务在HDFS上执行，通常用于离线分析。\n+ 数据的导入导出可以用工具sqoop，原理也是把命令翻译成MapReduce任务。\n+ Hive架构\nclient: 用户接口，hive shell/java/webUI\nmetastore: 元数据信息，包括表名，表所属数据库，表拥有者，列、分区字段，表类型等\ndriver: 包括解析器（SQL parser），编译器（physical plan），优化器（Query Optimizer），执行器（Execution）- MR/Spark\nHadoop: 存储数据\n+ Hive组件\nHiveServer/HiveServer2\nHiveMetastore\n\n# HBase\n+ HBase是什么\nHBase是构建在HDFS上的分布式数据库，适用于OLAP任务。\n+ 列式存储\nHBase使用列式存储，相当于把mysql每一行的每一列拆开，然后通过rowkey关联起来。HBase中每一行是key-value的形式。\n+ 列簇\n可以定义列簇把相关列存储在一起。生产环境由于性能考虑和数据均衡考虑，一般只会用一个列簇，最多连个列簇。\n+ rowkey的设计\nHBase只能通过rowkey来查询，rowkey底层是B+数存储。\nHBase提供三种查询方式：1）全表扫描，scan；2）根据一个rowkey查询；3）根据rowkey过滤的范围查询\n+ LSM三层存储模型\n数据先写到内存MemStore中，内存达到一定阈值再刷写到硬盘StoreFile中，再满足一定条件时，小的StoreFile会合并为大的StoreFile\n+ 数据修改\n可进行数据修改和删除\n+ HBase架构\nHMaster, HRegionServer, zookeeper\n+ HRegionServer架构\nHLog, WAL, MemStore, StoreFile\nRegion是HBase在rowkey上的切分，每个Region都可以通过startKey和endKey来确定rowkey范围，一个HRegionServer可能有多个Region。\nrowkey需考虑散列性\n+ 读取和写入流程\n\n# Zookeeper\n+ 什么是Zookeeper\nZookeeper是针对分布式系统的协调服务（本身就是分布式应用程序），优点是可靠，可扩展，高性能。\n+ 数据结构\nZooKeeper的数据结构，跟Unix文件系统非常类似，可以看做是一颗树，每个节点叫做ZNode。每一个节点可以通过路径来标识。\nZooKeeper的节点我们称之为Znode，Znode分为两种类型：\n短暂/临时(Ephemeral)：当客户端和服务端断开连接后，所创建的Znode(节点)会自动删除\n持久(Persistent)：当客户端和服务端断开连接后，所创建的Znode(节点)不会删除\n+ Ｚookeeper的作用\n统一配置管理\n统一命名服务\n分布式锁\n集群管理\n\nreferences\nhttps://lxkaka.wang/2017/12/21/zookeeper/ zk的简单实践\n\n\n","source":"_posts/Hadoop生态圈介绍.md","raw":"---\ntitle: Hadoop生态圈介绍\ndate: 2019-06-29 18:20:04\ncategories:\n\t - bigData\ntags: [Hadoop]\n---\n作为Hadoop集群的运维工程师，学习Hadoop的目的是为了解业务。\n<!-- more --> \n# Hive\n+ Hive是一个数据仓库，存储大数据，主要用来做OLAP分析.\n+ Hive定义了一种类似SQL的查询语言（HQL），将SQL转化为MapReduce任务在HDFS上执行，通常用于离线分析。\n+ 数据的导入导出可以用工具sqoop，原理也是把命令翻译成MapReduce任务。\n+ Hive架构\nclient: 用户接口，hive shell/java/webUI\nmetastore: 元数据信息，包括表名，表所属数据库，表拥有者，列、分区字段，表类型等\ndriver: 包括解析器（SQL parser），编译器（physical plan），优化器（Query Optimizer），执行器（Execution）- MR/Spark\nHadoop: 存储数据\n+ Hive组件\nHiveServer/HiveServer2\nHiveMetastore\n\n# HBase\n+ HBase是什么\nHBase是构建在HDFS上的分布式数据库，适用于OLAP任务。\n+ 列式存储\nHBase使用列式存储，相当于把mysql每一行的每一列拆开，然后通过rowkey关联起来。HBase中每一行是key-value的形式。\n+ 列簇\n可以定义列簇把相关列存储在一起。生产环境由于性能考虑和数据均衡考虑，一般只会用一个列簇，最多连个列簇。\n+ rowkey的设计\nHBase只能通过rowkey来查询，rowkey底层是B+数存储。\nHBase提供三种查询方式：1）全表扫描，scan；2）根据一个rowkey查询；3）根据rowkey过滤的范围查询\n+ LSM三层存储模型\n数据先写到内存MemStore中，内存达到一定阈值再刷写到硬盘StoreFile中，再满足一定条件时，小的StoreFile会合并为大的StoreFile\n+ 数据修改\n可进行数据修改和删除\n+ HBase架构\nHMaster, HRegionServer, zookeeper\n+ HRegionServer架构\nHLog, WAL, MemStore, StoreFile\nRegion是HBase在rowkey上的切分，每个Region都可以通过startKey和endKey来确定rowkey范围，一个HRegionServer可能有多个Region。\nrowkey需考虑散列性\n+ 读取和写入流程\n\n# Zookeeper\n+ 什么是Zookeeper\nZookeeper是针对分布式系统的协调服务（本身就是分布式应用程序），优点是可靠，可扩展，高性能。\n+ 数据结构\nZooKeeper的数据结构，跟Unix文件系统非常类似，可以看做是一颗树，每个节点叫做ZNode。每一个节点可以通过路径来标识。\nZooKeeper的节点我们称之为Znode，Znode分为两种类型：\n短暂/临时(Ephemeral)：当客户端和服务端断开连接后，所创建的Znode(节点)会自动删除\n持久(Persistent)：当客户端和服务端断开连接后，所创建的Znode(节点)不会删除\n+ Ｚookeeper的作用\n统一配置管理\n统一命名服务\n分布式锁\n集群管理\n\nreferences\nhttps://lxkaka.wang/2017/12/21/zookeeper/ zk的简单实践\n\n\n","slug":"Hadoop生态圈介绍","published":1,"updated":"2020-05-05T11:13:37.721Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9ttxj9w000083lzf3dvq49r","content":"<p>作为Hadoop集群的运维工程师，学习Hadoop的目的是为了解业务。<br><a id=\"more\"></a> </p>\n<h1 id=\"Hive\"><a href=\"#Hive\" class=\"headerlink\" title=\"Hive\"></a>Hive</h1><ul>\n<li>Hive是一个数据仓库，存储大数据，主要用来做OLAP分析.</li>\n<li>Hive定义了一种类似SQL的查询语言（HQL），将SQL转化为MapReduce任务在HDFS上执行，通常用于离线分析。</li>\n<li>数据的导入导出可以用工具sqoop，原理也是把命令翻译成MapReduce任务。</li>\n<li>Hive架构<br>client: 用户接口，hive shell/java/webUI<br>metastore: 元数据信息，包括表名，表所属数据库，表拥有者，列、分区字段，表类型等<br>driver: 包括解析器（SQL parser），编译器（physical plan），优化器（Query Optimizer），执行器（Execution）- MR/Spark<br>Hadoop: 存储数据</li>\n<li>Hive组件<br>HiveServer/HiveServer2<br>HiveMetastore</li>\n</ul>\n<h1 id=\"HBase\"><a href=\"#HBase\" class=\"headerlink\" title=\"HBase\"></a>HBase</h1><ul>\n<li>HBase是什么<br>HBase是构建在HDFS上的分布式数据库，适用于OLAP任务。</li>\n<li>列式存储<br>HBase使用列式存储，相当于把mysql每一行的每一列拆开，然后通过rowkey关联起来。HBase中每一行是key-value的形式。</li>\n<li>列簇<br>可以定义列簇把相关列存储在一起。生产环境由于性能考虑和数据均衡考虑，一般只会用一个列簇，最多连个列簇。</li>\n<li>rowkey的设计<br>HBase只能通过rowkey来查询，rowkey底层是B+数存储。<br>HBase提供三种查询方式：1）全表扫描，scan；2）根据一个rowkey查询；3）根据rowkey过滤的范围查询</li>\n<li>LSM三层存储模型<br>数据先写到内存MemStore中，内存达到一定阈值再刷写到硬盘StoreFile中，再满足一定条件时，小的StoreFile会合并为大的StoreFile</li>\n<li>数据修改<br>可进行数据修改和删除</li>\n<li>HBase架构<br>HMaster, HRegionServer, zookeeper</li>\n<li>HRegionServer架构<br>HLog, WAL, MemStore, StoreFile<br>Region是HBase在rowkey上的切分，每个Region都可以通过startKey和endKey来确定rowkey范围，一个HRegionServer可能有多个Region。<br>rowkey需考虑散列性</li>\n<li>读取和写入流程</li>\n</ul>\n<h1 id=\"Zookeeper\"><a href=\"#Zookeeper\" class=\"headerlink\" title=\"Zookeeper\"></a>Zookeeper</h1><ul>\n<li>什么是Zookeeper<br>Zookeeper是针对分布式系统的协调服务（本身就是分布式应用程序），优点是可靠，可扩展，高性能。</li>\n<li>数据结构<br>ZooKeeper的数据结构，跟Unix文件系统非常类似，可以看做是一颗树，每个节点叫做ZNode。每一个节点可以通过路径来标识。<br>ZooKeeper的节点我们称之为Znode，Znode分为两种类型：<br>短暂/临时(Ephemeral)：当客户端和服务端断开连接后，所创建的Znode(节点)会自动删除<br>持久(Persistent)：当客户端和服务端断开连接后，所创建的Znode(节点)不会删除</li>\n<li>Ｚookeeper的作用<br>统一配置管理<br>统一命名服务<br>分布式锁<br>集群管理</li>\n</ul>\n<p>references<br><a href=\"https://lxkaka.wang/2017/12/21/zookeeper/\" target=\"_blank\" rel=\"noopener\">https://lxkaka.wang/2017/12/21/zookeeper/</a> zk的简单实践</p>\n","site":{"data":{}},"excerpt":"<p>作为Hadoop集群的运维工程师，学习Hadoop的目的是为了解业务。<br>","more":"</p>\n<h1 id=\"Hive\"><a href=\"#Hive\" class=\"headerlink\" title=\"Hive\"></a>Hive</h1><ul>\n<li>Hive是一个数据仓库，存储大数据，主要用来做OLAP分析.</li>\n<li>Hive定义了一种类似SQL的查询语言（HQL），将SQL转化为MapReduce任务在HDFS上执行，通常用于离线分析。</li>\n<li>数据的导入导出可以用工具sqoop，原理也是把命令翻译成MapReduce任务。</li>\n<li>Hive架构<br>client: 用户接口，hive shell/java/webUI<br>metastore: 元数据信息，包括表名，表所属数据库，表拥有者，列、分区字段，表类型等<br>driver: 包括解析器（SQL parser），编译器（physical plan），优化器（Query Optimizer），执行器（Execution）- MR/Spark<br>Hadoop: 存储数据</li>\n<li>Hive组件<br>HiveServer/HiveServer2<br>HiveMetastore</li>\n</ul>\n<h1 id=\"HBase\"><a href=\"#HBase\" class=\"headerlink\" title=\"HBase\"></a>HBase</h1><ul>\n<li>HBase是什么<br>HBase是构建在HDFS上的分布式数据库，适用于OLAP任务。</li>\n<li>列式存储<br>HBase使用列式存储，相当于把mysql每一行的每一列拆开，然后通过rowkey关联起来。HBase中每一行是key-value的形式。</li>\n<li>列簇<br>可以定义列簇把相关列存储在一起。生产环境由于性能考虑和数据均衡考虑，一般只会用一个列簇，最多连个列簇。</li>\n<li>rowkey的设计<br>HBase只能通过rowkey来查询，rowkey底层是B+数存储。<br>HBase提供三种查询方式：1）全表扫描，scan；2）根据一个rowkey查询；3）根据rowkey过滤的范围查询</li>\n<li>LSM三层存储模型<br>数据先写到内存MemStore中，内存达到一定阈值再刷写到硬盘StoreFile中，再满足一定条件时，小的StoreFile会合并为大的StoreFile</li>\n<li>数据修改<br>可进行数据修改和删除</li>\n<li>HBase架构<br>HMaster, HRegionServer, zookeeper</li>\n<li>HRegionServer架构<br>HLog, WAL, MemStore, StoreFile<br>Region是HBase在rowkey上的切分，每个Region都可以通过startKey和endKey来确定rowkey范围，一个HRegionServer可能有多个Region。<br>rowkey需考虑散列性</li>\n<li>读取和写入流程</li>\n</ul>\n<h1 id=\"Zookeeper\"><a href=\"#Zookeeper\" class=\"headerlink\" title=\"Zookeeper\"></a>Zookeeper</h1><ul>\n<li>什么是Zookeeper<br>Zookeeper是针对分布式系统的协调服务（本身就是分布式应用程序），优点是可靠，可扩展，高性能。</li>\n<li>数据结构<br>ZooKeeper的数据结构，跟Unix文件系统非常类似，可以看做是一颗树，每个节点叫做ZNode。每一个节点可以通过路径来标识。<br>ZooKeeper的节点我们称之为Znode，Znode分为两种类型：<br>短暂/临时(Ephemeral)：当客户端和服务端断开连接后，所创建的Znode(节点)会自动删除<br>持久(Persistent)：当客户端和服务端断开连接后，所创建的Znode(节点)不会删除</li>\n<li>Ｚookeeper的作用<br>统一配置管理<br>统一命名服务<br>分布式锁<br>集群管理</li>\n</ul>\n<p>references<br><a href=\"https://lxkaka.wang/2017/12/21/zookeeper/\" target=\"_blank\" rel=\"noopener\">https://lxkaka.wang/2017/12/21/zookeeper/</a> zk的简单实践</p>"},{"title":"Hexo+Github多设备同步","date":"2019-06-02T08:32:29.000Z","_content":"\n用Hexo+Github写博客最不方便的是，只能在一个设备（搭建Hexo）上进行博客更新。如果工作中用到多个设备，或者换了新电脑，项目迁移起来十分不便。\n其实它最主要的问题在于Hexo的配置文件是保存在本地的，因此可以用Github解决这个问题。主要思路是，用master分支保存博客内容相关文件，用另一个分支保存Hexo相关配置。\n\n<!-- more --> \n\n1 在配置Hexo的机器上完成hexo配置迁移\n（1）Git clone github项目并创建新的分支hexo\n```\nhttps://github.com/shluoyujun/shluoyujun.github.io\n```\n（2）切换到hexo分支\n（3）把Hexo配置文件夹里的文件全部拷贝到项目shluoyujun.github.io里\n注意路径！！！例如hexo配置在/usr/hexo, github项目在/usr/shluoyujun.github.io\n```\ncp -R /usr/hexo/* /usr/shluoyujun.github.io\n\n```\n删除主题模板的.git文件。如果在新设备上hexo g发现这个错误warn no layout ..,应该是主题模板文件丢了，从网上再下一份或者在hexo机器上之前的配置再拷贝一遍即可。\n（4）把修改提交到github上\n\n2 在另外一台机器上配置\n（1）搭建Hexo+Github的环境准备\n安装nodejs,hexo,git\n本地和github的连接. ssh key\n（2）拉取github的代码，并切换到hexo分支\n（3）在项目里npm install\n现在就可以在新机器上写博客了，注意所有修改提交到hexo分支。\n\n参考\nhttps://www.cnblogs.com/LandWind/articles/8952362.html\nhttps://blog.csdn.net/Monkey_LZL/article/details/60870891\nhttps://www.jianshu.com/p/fceaf373d797","source":"_posts/Hexo+GIthub多设备同步.md","raw":"---\ntitle: Hexo+Github多设备同步\ndate: 2019-06-02 16:32:29\ncategories:\n\t - environment\ntags: [hexo,github]\n---\n\n用Hexo+Github写博客最不方便的是，只能在一个设备（搭建Hexo）上进行博客更新。如果工作中用到多个设备，或者换了新电脑，项目迁移起来十分不便。\n其实它最主要的问题在于Hexo的配置文件是保存在本地的，因此可以用Github解决这个问题。主要思路是，用master分支保存博客内容相关文件，用另一个分支保存Hexo相关配置。\n\n<!-- more --> \n\n1 在配置Hexo的机器上完成hexo配置迁移\n（1）Git clone github项目并创建新的分支hexo\n```\nhttps://github.com/shluoyujun/shluoyujun.github.io\n```\n（2）切换到hexo分支\n（3）把Hexo配置文件夹里的文件全部拷贝到项目shluoyujun.github.io里\n注意路径！！！例如hexo配置在/usr/hexo, github项目在/usr/shluoyujun.github.io\n```\ncp -R /usr/hexo/* /usr/shluoyujun.github.io\n\n```\n删除主题模板的.git文件。如果在新设备上hexo g发现这个错误warn no layout ..,应该是主题模板文件丢了，从网上再下一份或者在hexo机器上之前的配置再拷贝一遍即可。\n（4）把修改提交到github上\n\n2 在另外一台机器上配置\n（1）搭建Hexo+Github的环境准备\n安装nodejs,hexo,git\n本地和github的连接. ssh key\n（2）拉取github的代码，并切换到hexo分支\n（3）在项目里npm install\n现在就可以在新机器上写博客了，注意所有修改提交到hexo分支。\n\n参考\nhttps://www.cnblogs.com/LandWind/articles/8952362.html\nhttps://blog.csdn.net/Monkey_LZL/article/details/60870891\nhttps://www.jianshu.com/p/fceaf373d797","slug":"Hexo+GIthub多设备同步","published":1,"updated":"2020-05-05T11:13:37.721Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9ttxj9z000283lzl63a1grs","content":"<p>用Hexo+Github写博客最不方便的是，只能在一个设备（搭建Hexo）上进行博客更新。如果工作中用到多个设备，或者换了新电脑，项目迁移起来十分不便。<br>其实它最主要的问题在于Hexo的配置文件是保存在本地的，因此可以用Github解决这个问题。主要思路是，用master分支保存博客内容相关文件，用另一个分支保存Hexo相关配置。</p>\n<a id=\"more\"></a> \n<p>1 在配置Hexo的机器上完成hexo配置迁移<br>（1）Git clone github项目并创建新的分支hexo<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://github.com/shluoyujun/shluoyujun.github.io</span><br></pre></td></tr></table></figure></p>\n<p>（2）切换到hexo分支<br>（3）把Hexo配置文件夹里的文件全部拷贝到项目shluoyujun.github.io里<br>注意路径！！！例如hexo配置在/usr/hexo, github项目在/usr/shluoyujun.github.io<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp -R /usr/hexo/* /usr/shluoyujun.github.io</span><br></pre></td></tr></table></figure></p>\n<p>删除主题模板的.git文件。如果在新设备上hexo g发现这个错误warn no layout ..,应该是主题模板文件丢了，从网上再下一份或者在hexo机器上之前的配置再拷贝一遍即可。<br>（4）把修改提交到github上</p>\n<p>2 在另外一台机器上配置<br>（1）搭建Hexo+Github的环境准备<br>安装nodejs,hexo,git<br>本地和github的连接. ssh key<br>（2）拉取github的代码，并切换到hexo分支<br>（3）在项目里npm install<br>现在就可以在新机器上写博客了，注意所有修改提交到hexo分支。</p>\n<p>参考<br><a href=\"https://www.cnblogs.com/LandWind/articles/8952362.html\" target=\"_blank\" rel=\"noopener\">https://www.cnblogs.com/LandWind/articles/8952362.html</a><br><a href=\"https://blog.csdn.net/Monkey_LZL/article/details/60870891\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/Monkey_LZL/article/details/60870891</a><br><a href=\"https://www.jianshu.com/p/fceaf373d797\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/fceaf373d797</a></p>\n","site":{"data":{}},"excerpt":"<p>用Hexo+Github写博客最不方便的是，只能在一个设备（搭建Hexo）上进行博客更新。如果工作中用到多个设备，或者换了新电脑，项目迁移起来十分不便。<br>其实它最主要的问题在于Hexo的配置文件是保存在本地的，因此可以用Github解决这个问题。主要思路是，用master分支保存博客内容相关文件，用另一个分支保存Hexo相关配置。</p>","more":"<p>1 在配置Hexo的机器上完成hexo配置迁移<br>（1）Git clone github项目并创建新的分支hexo<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://github.com/shluoyujun/shluoyujun.github.io</span><br></pre></td></tr></table></figure></p>\n<p>（2）切换到hexo分支<br>（3）把Hexo配置文件夹里的文件全部拷贝到项目shluoyujun.github.io里<br>注意路径！！！例如hexo配置在/usr/hexo, github项目在/usr/shluoyujun.github.io<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp -R /usr/hexo/* /usr/shluoyujun.github.io</span><br></pre></td></tr></table></figure></p>\n<p>删除主题模板的.git文件。如果在新设备上hexo g发现这个错误warn no layout ..,应该是主题模板文件丢了，从网上再下一份或者在hexo机器上之前的配置再拷贝一遍即可。<br>（4）把修改提交到github上</p>\n<p>2 在另外一台机器上配置<br>（1）搭建Hexo+Github的环境准备<br>安装nodejs,hexo,git<br>本地和github的连接. ssh key<br>（2）拉取github的代码，并切换到hexo分支<br>（3）在项目里npm install<br>现在就可以在新机器上写博客了，注意所有修改提交到hexo分支。</p>\n<p>参考<br><a href=\"https://www.cnblogs.com/LandWind/articles/8952362.html\" target=\"_blank\" rel=\"noopener\">https://www.cnblogs.com/LandWind/articles/8952362.html</a><br><a href=\"https://blog.csdn.net/Monkey_LZL/article/details/60870891\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/Monkey_LZL/article/details/60870891</a><br><a href=\"https://www.jianshu.com/p/fceaf373d797\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/fceaf373d797</a></p>"},{"title":"JMockit单元测试","date":"2019-07-03T09:12:06.000Z","_content":"\n最近项目在进行代码质量的提升，而单元测试覆盖率是代码质量的标准之一，项目主要用到Jmockit进行测试用例的编写，借此机会全面学习一下。\n<!-- more --> \n在代码中会有很多与其他组件或服务的交互，例如网络，数据库等，在测试环境下可能并不具备发起这些请求的条件，因此我们需要对这些依赖进行模拟（mock）,JMockit就是一个Java类、接口和对象的模拟工具，应用在程序的单元测试中。\n\nJMockit有两种Mock方式\n（1）Behaviour-oriented (Expecation & Verification)\n类似黑盒，是基于代码执行的行为的Mock，由人工定义输入什么，返回什么，一般遵循Record-Reply-Verification流程\n* 录制方法预期行为\n* 真实调用\n* 验证录制行为被调用\n\n（2）State-oriented (MockUp<GenericType>)\n类似白盒，可以直接改写被Mock方法的内部逻辑\n\n1 @Injectable和@Tested\n（1）@Injectable经常和@Tested一并使用\n（2）@Tested表示被测试对象实例，只能作用于具体类，而不能作用于接口，因为一个接口可能有多个实现类，被测试的只能是实现改接口的某一具体类。\n（3）如果该对象没有赋值，JMockit会去实例化它，若@Tested的构造函数有参数，则JMockit通过在测试属性&测试参数中查找@Injectable修饰的Mocked对象注入@Tested对象的构造函数来实例化，不然，则用无参构造函数来实例化。除了构造函数的注入，JMockit还会通过属性查找的方式，把@Injectable对象注入到@Tested对象中。\n\n2 @Mocked和@Injectable的区别\n两个注解都是告诉JMockit生成一个Mocked对象，但@Injectable只针对其修饰的实例，而@Mocked是针对其修饰类的所有实例\n@Injectable对类的静态方法、构造函数没有影响\n\n3 MockUp和@Mock\nMockUp+@Mock是一种常见的Mock方式，可以对某个类中的某个方法进行改写。\n\n4 Expectations\nExpectations用于录制，主要有两种使用方式\n（１）通过引用外部类的Mock对象（＠Mocked,@Injectable,@Capturing）来录制\n（２）通过构建函数注入类/对象来录制\n\n5 Mock方法的选择 \n有些场景可以用多种方法进行Mock，可以针对需要选择最方便的一个。\n（１）Mock类\n可以用Expecations\n```\nnew Expectations(Utils.class) {{\n\n}};\n```\n也可以MockUp\n```\nnew MockUp<Utils>() {\n\t@Mock\n\tpublic void method() {\n\n    }\n};\n```\n（２）Mock实例\n用Expectations\n```\nUtils instance = new Utils();\n// 直接把实例传给Expectations的构造函数即可Mock这个实例\nnew Expectations(instance) {\n    {\n    }\n};\n ```\n（３）Mock接口\n用＠Injectable注入接口实例，再用Expecations Mock方法。\n一般来说，接口是给类来依赖的，我们给测试类加上＠Tested，就可以让Jmockit做依赖注入。\n\nReferences\nhttp://jmockit.cn/index.htm\n","source":"_posts/JMockit单元测试.md","raw":"---\ntitle: JMockit单元测试\ndate: 2019-07-03 17:12:06\ncategories:\n\t - testing\ntags: [java,testing,JMockit]\n---\n\n最近项目在进行代码质量的提升，而单元测试覆盖率是代码质量的标准之一，项目主要用到Jmockit进行测试用例的编写，借此机会全面学习一下。\n<!-- more --> \n在代码中会有很多与其他组件或服务的交互，例如网络，数据库等，在测试环境下可能并不具备发起这些请求的条件，因此我们需要对这些依赖进行模拟（mock）,JMockit就是一个Java类、接口和对象的模拟工具，应用在程序的单元测试中。\n\nJMockit有两种Mock方式\n（1）Behaviour-oriented (Expecation & Verification)\n类似黑盒，是基于代码执行的行为的Mock，由人工定义输入什么，返回什么，一般遵循Record-Reply-Verification流程\n* 录制方法预期行为\n* 真实调用\n* 验证录制行为被调用\n\n（2）State-oriented (MockUp<GenericType>)\n类似白盒，可以直接改写被Mock方法的内部逻辑\n\n1 @Injectable和@Tested\n（1）@Injectable经常和@Tested一并使用\n（2）@Tested表示被测试对象实例，只能作用于具体类，而不能作用于接口，因为一个接口可能有多个实现类，被测试的只能是实现改接口的某一具体类。\n（3）如果该对象没有赋值，JMockit会去实例化它，若@Tested的构造函数有参数，则JMockit通过在测试属性&测试参数中查找@Injectable修饰的Mocked对象注入@Tested对象的构造函数来实例化，不然，则用无参构造函数来实例化。除了构造函数的注入，JMockit还会通过属性查找的方式，把@Injectable对象注入到@Tested对象中。\n\n2 @Mocked和@Injectable的区别\n两个注解都是告诉JMockit生成一个Mocked对象，但@Injectable只针对其修饰的实例，而@Mocked是针对其修饰类的所有实例\n@Injectable对类的静态方法、构造函数没有影响\n\n3 MockUp和@Mock\nMockUp+@Mock是一种常见的Mock方式，可以对某个类中的某个方法进行改写。\n\n4 Expectations\nExpectations用于录制，主要有两种使用方式\n（１）通过引用外部类的Mock对象（＠Mocked,@Injectable,@Capturing）来录制\n（２）通过构建函数注入类/对象来录制\n\n5 Mock方法的选择 \n有些场景可以用多种方法进行Mock，可以针对需要选择最方便的一个。\n（１）Mock类\n可以用Expecations\n```\nnew Expectations(Utils.class) {{\n\n}};\n```\n也可以MockUp\n```\nnew MockUp<Utils>() {\n\t@Mock\n\tpublic void method() {\n\n    }\n};\n```\n（２）Mock实例\n用Expectations\n```\nUtils instance = new Utils();\n// 直接把实例传给Expectations的构造函数即可Mock这个实例\nnew Expectations(instance) {\n    {\n    }\n};\n ```\n（３）Mock接口\n用＠Injectable注入接口实例，再用Expecations Mock方法。\n一般来说，接口是给类来依赖的，我们给测试类加上＠Tested，就可以让Jmockit做依赖注入。\n\nReferences\nhttp://jmockit.cn/index.htm\n","slug":"JMockit单元测试","published":1,"updated":"2020-05-05T11:13:37.721Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9ttxja3000683lzcogtzjw7","content":"<p>最近项目在进行代码质量的提升，而单元测试覆盖率是代码质量的标准之一，项目主要用到Jmockit进行测试用例的编写，借此机会全面学习一下。<br><a id=\"more\"></a><br>在代码中会有很多与其他组件或服务的交互，例如网络，数据库等，在测试环境下可能并不具备发起这些请求的条件，因此我们需要对这些依赖进行模拟（mock）,JMockit就是一个Java类、接口和对象的模拟工具，应用在程序的单元测试中。</p>\n<p>JMockit有两种Mock方式<br>（1）Behaviour-oriented (Expecation &amp; Verification)<br>类似黑盒，是基于代码执行的行为的Mock，由人工定义输入什么，返回什么，一般遵循Record-Reply-Verification流程</p>\n<ul>\n<li>录制方法预期行为</li>\n<li>真实调用</li>\n<li>验证录制行为被调用</li>\n</ul>\n<p>（2）State-oriented (MockUp<generictype>)<br>类似白盒，可以直接改写被Mock方法的内部逻辑</generictype></p>\n<p>1 @Injectable和@Tested<br>（1）@Injectable经常和@Tested一并使用<br>（2）@Tested表示被测试对象实例，只能作用于具体类，而不能作用于接口，因为一个接口可能有多个实现类，被测试的只能是实现改接口的某一具体类。<br>（3）如果该对象没有赋值，JMockit会去实例化它，若@Tested的构造函数有参数，则JMockit通过在测试属性&amp;测试参数中查找@Injectable修饰的Mocked对象注入@Tested对象的构造函数来实例化，不然，则用无参构造函数来实例化。除了构造函数的注入，JMockit还会通过属性查找的方式，把@Injectable对象注入到@Tested对象中。</p>\n<p>2 @Mocked和@Injectable的区别<br>两个注解都是告诉JMockit生成一个Mocked对象，但@Injectable只针对其修饰的实例，而@Mocked是针对其修饰类的所有实例<br>@Injectable对类的静态方法、构造函数没有影响</p>\n<p>3 MockUp和@Mock<br>MockUp+@Mock是一种常见的Mock方式，可以对某个类中的某个方法进行改写。</p>\n<p>4 Expectations<br>Expectations用于录制，主要有两种使用方式<br>（１）通过引用外部类的Mock对象（＠Mocked,@Injectable,@Capturing）来录制<br>（２）通过构建函数注入类/对象来录制</p>\n<p>5 Mock方法的选择<br>有些场景可以用多种方法进行Mock，可以针对需要选择最方便的一个。<br>（１）Mock类<br>可以用Expecations<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">new Expectations(Utils.class) &#123;&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;&#125;;</span><br></pre></td></tr></table></figure></p>\n<p>也可以MockUp<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">new MockUp&lt;Utils&gt;() &#123;</span><br><span class=\"line\">\t@Mock</span><br><span class=\"line\">\tpublic void method() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<p>（２）Mock实例<br>用Expectations<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Utils instance = new Utils();</span><br><span class=\"line\">// 直接把实例传给Expectations的构造函数即可Mock这个实例</span><br><span class=\"line\">new Expectations(instance) &#123;</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<p>（３）Mock接口<br>用＠Injectable注入接口实例，再用Expecations Mock方法。<br>一般来说，接口是给类来依赖的，我们给测试类加上＠Tested，就可以让Jmockit做依赖注入。</p>\n<p>References<br><a href=\"http://jmockit.cn/index.htm\" target=\"_blank\" rel=\"noopener\">http://jmockit.cn/index.htm</a></p>\n","site":{"data":{}},"excerpt":"<p>最近项目在进行代码质量的提升，而单元测试覆盖率是代码质量的标准之一，项目主要用到Jmockit进行测试用例的编写，借此机会全面学习一下。<br>","more":"<br>在代码中会有很多与其他组件或服务的交互，例如网络，数据库等，在测试环境下可能并不具备发起这些请求的条件，因此我们需要对这些依赖进行模拟（mock）,JMockit就是一个Java类、接口和对象的模拟工具，应用在程序的单元测试中。</p>\n<p>JMockit有两种Mock方式<br>（1）Behaviour-oriented (Expecation &amp; Verification)<br>类似黑盒，是基于代码执行的行为的Mock，由人工定义输入什么，返回什么，一般遵循Record-Reply-Verification流程</p>\n<ul>\n<li>录制方法预期行为</li>\n<li>真实调用</li>\n<li>验证录制行为被调用</li>\n</ul>\n<p>（2）State-oriented (MockUp<generictype>)<br>类似白盒，可以直接改写被Mock方法的内部逻辑</generictype></p>\n<p>1 @Injectable和@Tested<br>（1）@Injectable经常和@Tested一并使用<br>（2）@Tested表示被测试对象实例，只能作用于具体类，而不能作用于接口，因为一个接口可能有多个实现类，被测试的只能是实现改接口的某一具体类。<br>（3）如果该对象没有赋值，JMockit会去实例化它，若@Tested的构造函数有参数，则JMockit通过在测试属性&amp;测试参数中查找@Injectable修饰的Mocked对象注入@Tested对象的构造函数来实例化，不然，则用无参构造函数来实例化。除了构造函数的注入，JMockit还会通过属性查找的方式，把@Injectable对象注入到@Tested对象中。</p>\n<p>2 @Mocked和@Injectable的区别<br>两个注解都是告诉JMockit生成一个Mocked对象，但@Injectable只针对其修饰的实例，而@Mocked是针对其修饰类的所有实例<br>@Injectable对类的静态方法、构造函数没有影响</p>\n<p>3 MockUp和@Mock<br>MockUp+@Mock是一种常见的Mock方式，可以对某个类中的某个方法进行改写。</p>\n<p>4 Expectations<br>Expectations用于录制，主要有两种使用方式<br>（１）通过引用外部类的Mock对象（＠Mocked,@Injectable,@Capturing）来录制<br>（２）通过构建函数注入类/对象来录制</p>\n<p>5 Mock方法的选择<br>有些场景可以用多种方法进行Mock，可以针对需要选择最方便的一个。<br>（１）Mock类<br>可以用Expecations<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">new Expectations(Utils.class) &#123;&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;&#125;;</span><br></pre></td></tr></table></figure></p>\n<p>也可以MockUp<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">new MockUp&lt;Utils&gt;() &#123;</span><br><span class=\"line\">\t@Mock</span><br><span class=\"line\">\tpublic void method() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<p>（２）Mock实例<br>用Expectations<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Utils instance = new Utils();</span><br><span class=\"line\">// 直接把实例传给Expectations的构造函数即可Mock这个实例</span><br><span class=\"line\">new Expectations(instance) &#123;</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<p>（３）Mock接口<br>用＠Injectable注入接口实例，再用Expecations Mock方法。<br>一般来说，接口是给类来依赖的，我们给测试类加上＠Tested，就可以让Jmockit做依赖注入。</p>\n<p>References<br><a href=\"http://jmockit.cn/index.htm\" target=\"_blank\" rel=\"noopener\">http://jmockit.cn/index.htm</a></p>"},{"title":"Java内存模型","date":"2019-07-09T13:38:35.000Z","_content":"Java内存模型的相关内容如图所示：\n<!-- more --> \n<img src=\"/img/Java内存模型.png\">\n1 内存模型特征\n原子性\n* 除了long,double类型以外，Java的基本数据类型的读写都是原子性的\n* synchronized保证原子性\n\n可见性\n* 当一个线程修改这个变量，其他线程可以立即得知\n* volatile, synchronized, final保证可见性\n\n有序性\n* 如果在本线程内观察，所有操作都是有序的；如果在一个线程中观察另一个线程，所有操作都是无序的。即“线程内表现为串行的语义”，“指令重排”，“工作内存与主内存同步延迟”\n* volitile, synchronized保证线程之间操作的有序性\n* 先行发生规则\n\n2 volatile\n关键字volatile是Java虚拟机提供的最轻量级的同步机制。当一个变量被volatile修饰后具有两种特性\n* 可见性\n* 禁止指令重排序优化。使用内存屏障（Memory Barrier或Memory Fence，重排序时不能把后面的指令重排序到内存屏障之前的位置）禁止重排\n\n注意，Java中的运算如value++并非原子操作（被编译成字节码时不止一条指令，当然严谨来说，只有一条字节码指令也并不一定就是一个原子操作），因此，基于volatile的变量在并发下并不总是安全的。只有在以下两个场景volatile可保证并发安全\n* 运算结果不依赖变量的当前值，或者能够确保只有单一的线程修改变量的值\n* 变量不需要与其他状态变量共同参与不变约束\n","source":"_posts/Java内存模型.md","raw":"---\ntitle: Java内存模型\ndate: 2019-07-09 21:38:35\ncategories:\n\t - developing\ntags: [java, jvm]\n---\nJava内存模型的相关内容如图所示：\n<!-- more --> \n<img src=\"/img/Java内存模型.png\">\n1 内存模型特征\n原子性\n* 除了long,double类型以外，Java的基本数据类型的读写都是原子性的\n* synchronized保证原子性\n\n可见性\n* 当一个线程修改这个变量，其他线程可以立即得知\n* volatile, synchronized, final保证可见性\n\n有序性\n* 如果在本线程内观察，所有操作都是有序的；如果在一个线程中观察另一个线程，所有操作都是无序的。即“线程内表现为串行的语义”，“指令重排”，“工作内存与主内存同步延迟”\n* volitile, synchronized保证线程之间操作的有序性\n* 先行发生规则\n\n2 volatile\n关键字volatile是Java虚拟机提供的最轻量级的同步机制。当一个变量被volatile修饰后具有两种特性\n* 可见性\n* 禁止指令重排序优化。使用内存屏障（Memory Barrier或Memory Fence，重排序时不能把后面的指令重排序到内存屏障之前的位置）禁止重排\n\n注意，Java中的运算如value++并非原子操作（被编译成字节码时不止一条指令，当然严谨来说，只有一条字节码指令也并不一定就是一个原子操作），因此，基于volatile的变量在并发下并不总是安全的。只有在以下两个场景volatile可保证并发安全\n* 运算结果不依赖变量的当前值，或者能够确保只有单一的线程修改变量的值\n* 变量不需要与其他状态变量共同参与不变约束\n","slug":"Java内存模型","published":1,"updated":"2020-05-05T11:13:37.721Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9ttxja4000883lz6rpfxxnp","content":"<p>Java内存模型的相关内容如图所示：<br><a id=\"more\"></a><br><img src=\"/img/Java内存模型.png\"><br>1 内存模型特征<br>原子性</p>\n<ul>\n<li>除了long,double类型以外，Java的基本数据类型的读写都是原子性的</li>\n<li>synchronized保证原子性</li>\n</ul>\n<p>可见性</p>\n<ul>\n<li>当一个线程修改这个变量，其他线程可以立即得知</li>\n<li>volatile, synchronized, final保证可见性</li>\n</ul>\n<p>有序性</p>\n<ul>\n<li>如果在本线程内观察，所有操作都是有序的；如果在一个线程中观察另一个线程，所有操作都是无序的。即“线程内表现为串行的语义”，“指令重排”，“工作内存与主内存同步延迟”</li>\n<li>volitile, synchronized保证线程之间操作的有序性</li>\n<li>先行发生规则</li>\n</ul>\n<p>2 volatile<br>关键字volatile是Java虚拟机提供的最轻量级的同步机制。当一个变量被volatile修饰后具有两种特性</p>\n<ul>\n<li>可见性</li>\n<li>禁止指令重排序优化。使用内存屏障（Memory Barrier或Memory Fence，重排序时不能把后面的指令重排序到内存屏障之前的位置）禁止重排</li>\n</ul>\n<p>注意，Java中的运算如value++并非原子操作（被编译成字节码时不止一条指令，当然严谨来说，只有一条字节码指令也并不一定就是一个原子操作），因此，基于volatile的变量在并发下并不总是安全的。只有在以下两个场景volatile可保证并发安全</p>\n<ul>\n<li>运算结果不依赖变量的当前值，或者能够确保只有单一的线程修改变量的值</li>\n<li>变量不需要与其他状态变量共同参与不变约束</li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>Java内存模型的相关内容如图所示：<br>","more":"<br><img src=\"/img/Java内存模型.png\"><br>1 内存模型特征<br>原子性</p>\n<ul>\n<li>除了long,double类型以外，Java的基本数据类型的读写都是原子性的</li>\n<li>synchronized保证原子性</li>\n</ul>\n<p>可见性</p>\n<ul>\n<li>当一个线程修改这个变量，其他线程可以立即得知</li>\n<li>volatile, synchronized, final保证可见性</li>\n</ul>\n<p>有序性</p>\n<ul>\n<li>如果在本线程内观察，所有操作都是有序的；如果在一个线程中观察另一个线程，所有操作都是无序的。即“线程内表现为串行的语义”，“指令重排”，“工作内存与主内存同步延迟”</li>\n<li>volitile, synchronized保证线程之间操作的有序性</li>\n<li>先行发生规则</li>\n</ul>\n<p>2 volatile<br>关键字volatile是Java虚拟机提供的最轻量级的同步机制。当一个变量被volatile修饰后具有两种特性</p>\n<ul>\n<li>可见性</li>\n<li>禁止指令重排序优化。使用内存屏障（Memory Barrier或Memory Fence，重排序时不能把后面的指令重排序到内存屏障之前的位置）禁止重排</li>\n</ul>\n<p>注意，Java中的运算如value++并非原子操作（被编译成字节码时不止一条指令，当然严谨来说，只有一条字节码指令也并不一定就是一个原子操作），因此，基于volatile的变量在并发下并不总是安全的。只有在以下两个场景volatile可保证并发安全</p>\n<ul>\n<li>运算结果不依赖变量的当前值，或者能够确保只有单一的线程修改变量的值</li>\n<li>变量不需要与其他状态变量共同参与不变约束</li>\n</ul>"},{"title":"Java反射初识","date":"2019-06-23T12:14:21.000Z","_content":"学习反射能更深入的了解Java的编译，运行阶段，泛型等。周末看了一个讲解反射的课程，觉得讲的不错，适合入门。课程地址https://www.imooc.com/learn/199\n<!-- more --> \n1 Class的使用\nJava中静态成员和基本数据类型不是对象，其他都是对象\n类是java.lang.Class类的实例对象\n\n实例对象的三种获取方式\nFoo foo = new Foo();\nClass c1 = Foo.class;\nClass c2 = foo.getClass();\nClass c3 = Class.forName(\"xx.xx.xx.Foo\");\nc1,c2,c3称为Foo类的类类型\n可以通过类类型创建对象, 类需要有无参数的构造方法\nFoo foo = (Foo)c1.newInsatance();\n\n2 动态加载类\n区分编译和运行\n静态加载类　\nFoo foo = new Foo();\n动态加载类\nClass.forName(\"类全称\"）\n编译时刻加载类是静态加载类，运行时刻加载类是动态加载类\n\n如果一个类中涉及到多个类，此时将多个类向上提取接口（众类实现该接口），然后通过动态加载类的方式在运行的时候才创建对象不用的不需要编译就不会报错，这样底层不需要改动，每次增加一个类实现该接口标准就可以也不需要编译officebetter 只需编译新添加的类。\n\n在设计方面，功能性的类，我们尽量去使用动态加载，而不使用静态加载，这样可以使程序更加灵活。\n\n3 获取方法信息\nClass类的基本API使用\n获取类的信息，包括类类型，成员函数，成员变量\nClass c = int.class;\nc.getName();\n\n4 获取成员变量构造函数信息\n成员变量的反射\nFiled[] fs = c.getDeclaredFields();\n构造函数的反射\nConstructor[] cs = c.geteclaredConstructors();\n\n5 方法的反射\n获取方法\n方法的名称和方法的参数列表才能唯一决定某个方法\n方法反射的操作\nmethod.invoke(对象，参数列表)\n\n6 通过反射了解集合泛型的本质\n反射可以绕过编译\n但Java中集合的泛型，是防止输入错误的，只在编译阶段有效，编译之后就无效了。","source":"_posts/Java反射初识.md","raw":"---\ntitle: Java反射初识\ndate: 2019-06-23 20:14:21\ncategories:\n\t - developing\ntags: [java,reflect]\n---\n学习反射能更深入的了解Java的编译，运行阶段，泛型等。周末看了一个讲解反射的课程，觉得讲的不错，适合入门。课程地址https://www.imooc.com/learn/199\n<!-- more --> \n1 Class的使用\nJava中静态成员和基本数据类型不是对象，其他都是对象\n类是java.lang.Class类的实例对象\n\n实例对象的三种获取方式\nFoo foo = new Foo();\nClass c1 = Foo.class;\nClass c2 = foo.getClass();\nClass c3 = Class.forName(\"xx.xx.xx.Foo\");\nc1,c2,c3称为Foo类的类类型\n可以通过类类型创建对象, 类需要有无参数的构造方法\nFoo foo = (Foo)c1.newInsatance();\n\n2 动态加载类\n区分编译和运行\n静态加载类　\nFoo foo = new Foo();\n动态加载类\nClass.forName(\"类全称\"）\n编译时刻加载类是静态加载类，运行时刻加载类是动态加载类\n\n如果一个类中涉及到多个类，此时将多个类向上提取接口（众类实现该接口），然后通过动态加载类的方式在运行的时候才创建对象不用的不需要编译就不会报错，这样底层不需要改动，每次增加一个类实现该接口标准就可以也不需要编译officebetter 只需编译新添加的类。\n\n在设计方面，功能性的类，我们尽量去使用动态加载，而不使用静态加载，这样可以使程序更加灵活。\n\n3 获取方法信息\nClass类的基本API使用\n获取类的信息，包括类类型，成员函数，成员变量\nClass c = int.class;\nc.getName();\n\n4 获取成员变量构造函数信息\n成员变量的反射\nFiled[] fs = c.getDeclaredFields();\n构造函数的反射\nConstructor[] cs = c.geteclaredConstructors();\n\n5 方法的反射\n获取方法\n方法的名称和方法的参数列表才能唯一决定某个方法\n方法反射的操作\nmethod.invoke(对象，参数列表)\n\n6 通过反射了解集合泛型的本质\n反射可以绕过编译\n但Java中集合的泛型，是防止输入错误的，只在编译阶段有效，编译之后就无效了。","slug":"Java反射初识","published":1,"updated":"2020-05-05T11:13:37.721Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9ttxja6000983lzl9olyb4g","content":"<p>学习反射能更深入的了解Java的编译，运行阶段，泛型等。周末看了一个讲解反射的课程，觉得讲的不错，适合入门。课程地址<a href=\"https://www.imooc.com/learn/199\" target=\"_blank\" rel=\"noopener\">https://www.imooc.com/learn/199</a><br><a id=\"more\"></a><br>1 Class的使用<br>Java中静态成员和基本数据类型不是对象，其他都是对象<br>类是java.lang.Class类的实例对象</p>\n<p>实例对象的三种获取方式<br>Foo foo = new Foo();<br>Class c1 = Foo.class;<br>Class c2 = foo.getClass();<br>Class c3 = Class.forName(“xx.xx.xx.Foo”);<br>c1,c2,c3称为Foo类的类类型<br>可以通过类类型创建对象, 类需要有无参数的构造方法<br>Foo foo = (Foo)c1.newInsatance();</p>\n<p>2 动态加载类<br>区分编译和运行<br>静态加载类　<br>Foo foo = new Foo();<br>动态加载类<br>Class.forName(“类全称”）<br>编译时刻加载类是静态加载类，运行时刻加载类是动态加载类</p>\n<p>如果一个类中涉及到多个类，此时将多个类向上提取接口（众类实现该接口），然后通过动态加载类的方式在运行的时候才创建对象不用的不需要编译就不会报错，这样底层不需要改动，每次增加一个类实现该接口标准就可以也不需要编译officebetter 只需编译新添加的类。</p>\n<p>在设计方面，功能性的类，我们尽量去使用动态加载，而不使用静态加载，这样可以使程序更加灵活。</p>\n<p>3 获取方法信息<br>Class类的基本API使用<br>获取类的信息，包括类类型，成员函数，成员变量<br>Class c = int.class;<br>c.getName();</p>\n<p>4 获取成员变量构造函数信息<br>成员变量的反射<br>Filed[] fs = c.getDeclaredFields();<br>构造函数的反射<br>Constructor[] cs = c.geteclaredConstructors();</p>\n<p>5 方法的反射<br>获取方法<br>方法的名称和方法的参数列表才能唯一决定某个方法<br>方法反射的操作<br>method.invoke(对象，参数列表)</p>\n<p>6 通过反射了解集合泛型的本质<br>反射可以绕过编译<br>但Java中集合的泛型，是防止输入错误的，只在编译阶段有效，编译之后就无效了。</p>\n","site":{"data":{}},"excerpt":"<p>学习反射能更深入的了解Java的编译，运行阶段，泛型等。周末看了一个讲解反射的课程，觉得讲的不错，适合入门。课程地址<a href=\"https://www.imooc.com/learn/199\" target=\"_blank\" rel=\"noopener\">https://www.imooc.com/learn/199</a><br>","more":"<br>1 Class的使用<br>Java中静态成员和基本数据类型不是对象，其他都是对象<br>类是java.lang.Class类的实例对象</p>\n<p>实例对象的三种获取方式<br>Foo foo = new Foo();<br>Class c1 = Foo.class;<br>Class c2 = foo.getClass();<br>Class c3 = Class.forName(“xx.xx.xx.Foo”);<br>c1,c2,c3称为Foo类的类类型<br>可以通过类类型创建对象, 类需要有无参数的构造方法<br>Foo foo = (Foo)c1.newInsatance();</p>\n<p>2 动态加载类<br>区分编译和运行<br>静态加载类　<br>Foo foo = new Foo();<br>动态加载类<br>Class.forName(“类全称”）<br>编译时刻加载类是静态加载类，运行时刻加载类是动态加载类</p>\n<p>如果一个类中涉及到多个类，此时将多个类向上提取接口（众类实现该接口），然后通过动态加载类的方式在运行的时候才创建对象不用的不需要编译就不会报错，这样底层不需要改动，每次增加一个类实现该接口标准就可以也不需要编译officebetter 只需编译新添加的类。</p>\n<p>在设计方面，功能性的类，我们尽量去使用动态加载，而不使用静态加载，这样可以使程序更加灵活。</p>\n<p>3 获取方法信息<br>Class类的基本API使用<br>获取类的信息，包括类类型，成员函数，成员变量<br>Class c = int.class;<br>c.getName();</p>\n<p>4 获取成员变量构造函数信息<br>成员变量的反射<br>Filed[] fs = c.getDeclaredFields();<br>构造函数的反射<br>Constructor[] cs = c.geteclaredConstructors();</p>\n<p>5 方法的反射<br>获取方法<br>方法的名称和方法的参数列表才能唯一决定某个方法<br>方法反射的操作<br>method.invoke(对象，参数列表)</p>\n<p>6 通过反射了解集合泛型的本质<br>反射可以绕过编译<br>但Java中集合的泛型，是防止输入错误的，只在编译阶段有效，编译之后就无效了。</p>"},{"title":"Java异常处理最佳实践","date":"2019-07-06T11:13:25.000Z","_content":"Java异常的分类如下图所示：\n<!-- more --> \n<img src=\"/img/java异常分类.png\">\n\nchecked异常需要在代码中显示处理，否则会编译出错。checked异常进一步分为\n（１）引起注意型，如SQLException,ClassNotFoundException\n（２）坦然处置型，如UnAuthorizedException\nunchecked异常是运行时异常，继承RuntimeException，不需要程序进行显示的捕捉和处理。unchecked异常进一步分为\n（１）可预测异常，如IndexOutOfBoundsException,NullPointerException，此类异常不应该产生或抛出，而应该提前做好边界检查\n（２）需捕获异常，如RPC调用的远程服务超时异常\n（３）可透出异常，框架或系统产生的且会自行处理的异常，程序无需关心\n\nJava异常处理应该遵守如下准则：\n１　在finally中释放资源或使用try-with-resource语句\n２　抛出异常应尽可能具体明确\n３　在Javadoc里添加＠throws声明，描述什么样的情况会导致异常\n４　使用log将异常信息同异常一起抛出\n５　优先捕获更明确的异常\n６　不要捕获Throwable\nThrowable是所有异常（Exception）和错误（Error）的父类，虽然它能在catch从句中使用，但永远都不要这样做!\n如果你在catch从句中使用了Throwable，它将不仅捕获所有异常，它还将捕获所有错误，错误是由JVM抛出的，用来表明不打算让应用来处理的严重错误。\nOutOfMemoryError和StackOverflowError便是典型的例子，它们都是由于一些超出应用处理范围的情况导致的。\n```\npublic void doNotCatchThrowable() {\n    try {\n        // do something\n    } catch (Throwable t) {\n        // don't do this!\n    }\n}\n```\n7 不要忽略异常\ncatch到的异常应该做相应处理，至少也要讲日志打印出来。\n８　不要打印异常日志的同时将其抛出\n这样会导致一个异常打印多个异常信息\n９　包裹某个异常的同时不要丢弃它原本的异常消息\n\n处理Java异常最重要的是明确什么时候应该向上抛出，什么时候应该捕获异常。\n\nReferences\n１《码出高效Java开发手册》\n２https://stackify.com/best-practices-exceptions-java/\n３https://zhuanlan.zhihu.com/p/56115804","source":"_posts/Java异常处理最佳实践.md","raw":"---\ntitle: Java异常处理最佳实践\ndate: 2019-07-06 19:13:25\ncategories:\n\t - developing\ntags: [java,exception]\n---\nJava异常的分类如下图所示：\n<!-- more --> \n<img src=\"/img/java异常分类.png\">\n\nchecked异常需要在代码中显示处理，否则会编译出错。checked异常进一步分为\n（１）引起注意型，如SQLException,ClassNotFoundException\n（２）坦然处置型，如UnAuthorizedException\nunchecked异常是运行时异常，继承RuntimeException，不需要程序进行显示的捕捉和处理。unchecked异常进一步分为\n（１）可预测异常，如IndexOutOfBoundsException,NullPointerException，此类异常不应该产生或抛出，而应该提前做好边界检查\n（２）需捕获异常，如RPC调用的远程服务超时异常\n（３）可透出异常，框架或系统产生的且会自行处理的异常，程序无需关心\n\nJava异常处理应该遵守如下准则：\n１　在finally中释放资源或使用try-with-resource语句\n２　抛出异常应尽可能具体明确\n３　在Javadoc里添加＠throws声明，描述什么样的情况会导致异常\n４　使用log将异常信息同异常一起抛出\n５　优先捕获更明确的异常\n６　不要捕获Throwable\nThrowable是所有异常（Exception）和错误（Error）的父类，虽然它能在catch从句中使用，但永远都不要这样做!\n如果你在catch从句中使用了Throwable，它将不仅捕获所有异常，它还将捕获所有错误，错误是由JVM抛出的，用来表明不打算让应用来处理的严重错误。\nOutOfMemoryError和StackOverflowError便是典型的例子，它们都是由于一些超出应用处理范围的情况导致的。\n```\npublic void doNotCatchThrowable() {\n    try {\n        // do something\n    } catch (Throwable t) {\n        // don't do this!\n    }\n}\n```\n7 不要忽略异常\ncatch到的异常应该做相应处理，至少也要讲日志打印出来。\n８　不要打印异常日志的同时将其抛出\n这样会导致一个异常打印多个异常信息\n９　包裹某个异常的同时不要丢弃它原本的异常消息\n\n处理Java异常最重要的是明确什么时候应该向上抛出，什么时候应该捕获异常。\n\nReferences\n１《码出高效Java开发手册》\n２https://stackify.com/best-practices-exceptions-java/\n３https://zhuanlan.zhihu.com/p/56115804","slug":"Java异常处理最佳实践","published":1,"updated":"2020-05-05T11:13:37.721Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9ttxja7000d83lzkp7m49db","content":"<p>Java异常的分类如下图所示：<br><a id=\"more\"></a><br><img src=\"/img/java异常分类.png\"></p>\n<p>checked异常需要在代码中显示处理，否则会编译出错。checked异常进一步分为<br>（１）引起注意型，如SQLException,ClassNotFoundException<br>（２）坦然处置型，如UnAuthorizedException<br>unchecked异常是运行时异常，继承RuntimeException，不需要程序进行显示的捕捉和处理。unchecked异常进一步分为<br>（１）可预测异常，如IndexOutOfBoundsException,NullPointerException，此类异常不应该产生或抛出，而应该提前做好边界检查<br>（２）需捕获异常，如RPC调用的远程服务超时异常<br>（３）可透出异常，框架或系统产生的且会自行处理的异常，程序无需关心</p>\n<p>Java异常处理应该遵守如下准则：<br>１　在finally中释放资源或使用try-with-resource语句<br>２　抛出异常应尽可能具体明确<br>３　在Javadoc里添加＠throws声明，描述什么样的情况会导致异常<br>４　使用log将异常信息同异常一起抛出<br>５　优先捕获更明确的异常<br>６　不要捕获Throwable<br>Throwable是所有异常（Exception）和错误（Error）的父类，虽然它能在catch从句中使用，但永远都不要这样做!<br>如果你在catch从句中使用了Throwable，它将不仅捕获所有异常，它还将捕获所有错误，错误是由JVM抛出的，用来表明不打算让应用来处理的严重错误。<br>OutOfMemoryError和StackOverflowError便是典型的例子，它们都是由于一些超出应用处理范围的情况导致的。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public void doNotCatchThrowable() &#123;</span><br><span class=\"line\">    try &#123;</span><br><span class=\"line\">        // do something</span><br><span class=\"line\">    &#125; catch (Throwable t) &#123;</span><br><span class=\"line\">        // don&apos;t do this!</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>7 不要忽略异常<br>catch到的异常应该做相应处理，至少也要讲日志打印出来。<br>８　不要打印异常日志的同时将其抛出<br>这样会导致一个异常打印多个异常信息<br>９　包裹某个异常的同时不要丢弃它原本的异常消息</p>\n<p>处理Java异常最重要的是明确什么时候应该向上抛出，什么时候应该捕获异常。</p>\n<p>References<br>１《码出高效Java开发手册》<br>２<a href=\"https://stackify.com/best-practices-exceptions-java/\" target=\"_blank\" rel=\"noopener\">https://stackify.com/best-practices-exceptions-java/</a><br>３<a href=\"https://zhuanlan.zhihu.com/p/56115804\" target=\"_blank\" rel=\"noopener\">https://zhuanlan.zhihu.com/p/56115804</a></p>\n","site":{"data":{}},"excerpt":"<p>Java异常的分类如下图所示：<br>","more":"<br><img src=\"/img/java异常分类.png\"></p>\n<p>checked异常需要在代码中显示处理，否则会编译出错。checked异常进一步分为<br>（１）引起注意型，如SQLException,ClassNotFoundException<br>（２）坦然处置型，如UnAuthorizedException<br>unchecked异常是运行时异常，继承RuntimeException，不需要程序进行显示的捕捉和处理。unchecked异常进一步分为<br>（１）可预测异常，如IndexOutOfBoundsException,NullPointerException，此类异常不应该产生或抛出，而应该提前做好边界检查<br>（２）需捕获异常，如RPC调用的远程服务超时异常<br>（３）可透出异常，框架或系统产生的且会自行处理的异常，程序无需关心</p>\n<p>Java异常处理应该遵守如下准则：<br>１　在finally中释放资源或使用try-with-resource语句<br>２　抛出异常应尽可能具体明确<br>３　在Javadoc里添加＠throws声明，描述什么样的情况会导致异常<br>４　使用log将异常信息同异常一起抛出<br>５　优先捕获更明确的异常<br>６　不要捕获Throwable<br>Throwable是所有异常（Exception）和错误（Error）的父类，虽然它能在catch从句中使用，但永远都不要这样做!<br>如果你在catch从句中使用了Throwable，它将不仅捕获所有异常，它还将捕获所有错误，错误是由JVM抛出的，用来表明不打算让应用来处理的严重错误。<br>OutOfMemoryError和StackOverflowError便是典型的例子，它们都是由于一些超出应用处理范围的情况导致的。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public void doNotCatchThrowable() &#123;</span><br><span class=\"line\">    try &#123;</span><br><span class=\"line\">        // do something</span><br><span class=\"line\">    &#125; catch (Throwable t) &#123;</span><br><span class=\"line\">        // don&apos;t do this!</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>7 不要忽略异常<br>catch到的异常应该做相应处理，至少也要讲日志打印出来。<br>８　不要打印异常日志的同时将其抛出<br>这样会导致一个异常打印多个异常信息<br>９　包裹某个异常的同时不要丢弃它原本的异常消息</p>\n<p>处理Java异常最重要的是明确什么时候应该向上抛出，什么时候应该捕获异常。</p>\n<p>References<br>１《码出高效Java开发手册》<br>２<a href=\"https://stackify.com/best-practices-exceptions-java/\" target=\"_blank\" rel=\"noopener\">https://stackify.com/best-practices-exceptions-java/</a><br>３<a href=\"https://zhuanlan.zhihu.com/p/56115804\" target=\"_blank\" rel=\"noopener\">https://zhuanlan.zhihu.com/p/56115804</a></p>"},{"title":"docker常用命令","date":"2017-08-05T04:16:50.000Z","_content":"\ndocker的安装以及一些配置参考\n```\nhttps://github.com/widuu/chinese_docker/blob/master/installation/ubuntu.md#Ubuntu%E5%AE%89%E8%A3%85Docker\n```\n\n<!--more-->\n\n目录挂载\n```\nmkdir /work\nsudo mkfs.ext4 /dev/vdc\nsudo mount /dev/vdc /work\n```\n或者解除挂载\n```\nsudo umount  /dev/vdc /work\n```\n查看挂载情况\n```\ndf -h\n```\n\n可参考\n```\nhttps://gist.github.com/gaoyifan/019ad7766f030ab5be50\n```\n\n更改镜像和容器的保存路径\n```\nsudo docker info | grep \"Docker Root Dir\" 查看存储位置\nsudo vi /etc/default/docker\n```\n添加一行\n```\nDOCKER_OPTS=\"-g /mnt/docker\"\nsudo service docker restart\n```\n\n查看docker信息\n```\ndocker info\n```\n\n查看运行中的容器\n```\ndocker ps\n```\n\n查看所有容器\n```\ndocker ps -a\n```\n\n查看本地镜像\n```\ndocker images\n```\n删除镜像\n```\ndocker rmi $imagename\n```\n\n停止一个正在运行的容器\n```\ndocker stop $dockername\n```\n\n删除所有停止的容器\n```\ndocker rm $(docker ps -a -q)\n```\n\n启动一个容器\n```\ndocker start $dockername\n```\n\n进入一个容器\n```\ndocker exec -i -t $dockername /bin/sh\n```\ndocker run的参数说明，例如有用命令启动一个容器\n```\ndocker run --name $\"dDocker\" -d -p 8080:8888 -v /home/tensorflow:/home/jovyan/work jupyter/tensorflow-notebook start-notebook.sh --NotebookApp.token=''\n```\n\n--name 为容器指定一个名字，如果未指定会随机分配\n-d 保持后台运行\n-p 8080:8888 端口映射，8080是宿主机器的端口号，8888是docker端口号，访问时输入 [宿主机器ip：8080]\n-v /home/tensorflow:/work/jovnan 目录映射，可以理解为共享目录。docker容器是临时的，这个参数为了是代码和数据持久化保存。\njupyter/tensorflow-notebook 镜像名称，如果本地不存在，docker会自动从hub.docker.com上获取\n\n常见问题：\n1 Couldn’t connect to Docker daemon at http+unix://var/run/docker.sock - is it running? \n有次重启虚拟机后突然遇到这个问题，解决方法：\n\n```\nsudo vi /etc/default/docker\n```\n\n添加一行\n\n```\nDOCKER_OPTS=\"-H tcp://127.0.0.1:4243 -H unix:///var/run/docker.sock\"\n```\n\n再重启docker服务\n\n```\nsudo service docker restart\n```\n\nnote: 重启机器的之前最好先把运行中的docker容器停了\n","source":"_posts/docker常用命令.md","raw":"---\ntitle: docker常用命令\ndate: 2017-08-05 12:16:50\ncategories:\n\t - command\ntags: [linux, docker]\n---\n\ndocker的安装以及一些配置参考\n```\nhttps://github.com/widuu/chinese_docker/blob/master/installation/ubuntu.md#Ubuntu%E5%AE%89%E8%A3%85Docker\n```\n\n<!--more-->\n\n目录挂载\n```\nmkdir /work\nsudo mkfs.ext4 /dev/vdc\nsudo mount /dev/vdc /work\n```\n或者解除挂载\n```\nsudo umount  /dev/vdc /work\n```\n查看挂载情况\n```\ndf -h\n```\n\n可参考\n```\nhttps://gist.github.com/gaoyifan/019ad7766f030ab5be50\n```\n\n更改镜像和容器的保存路径\n```\nsudo docker info | grep \"Docker Root Dir\" 查看存储位置\nsudo vi /etc/default/docker\n```\n添加一行\n```\nDOCKER_OPTS=\"-g /mnt/docker\"\nsudo service docker restart\n```\n\n查看docker信息\n```\ndocker info\n```\n\n查看运行中的容器\n```\ndocker ps\n```\n\n查看所有容器\n```\ndocker ps -a\n```\n\n查看本地镜像\n```\ndocker images\n```\n删除镜像\n```\ndocker rmi $imagename\n```\n\n停止一个正在运行的容器\n```\ndocker stop $dockername\n```\n\n删除所有停止的容器\n```\ndocker rm $(docker ps -a -q)\n```\n\n启动一个容器\n```\ndocker start $dockername\n```\n\n进入一个容器\n```\ndocker exec -i -t $dockername /bin/sh\n```\ndocker run的参数说明，例如有用命令启动一个容器\n```\ndocker run --name $\"dDocker\" -d -p 8080:8888 -v /home/tensorflow:/home/jovyan/work jupyter/tensorflow-notebook start-notebook.sh --NotebookApp.token=''\n```\n\n--name 为容器指定一个名字，如果未指定会随机分配\n-d 保持后台运行\n-p 8080:8888 端口映射，8080是宿主机器的端口号，8888是docker端口号，访问时输入 [宿主机器ip：8080]\n-v /home/tensorflow:/work/jovnan 目录映射，可以理解为共享目录。docker容器是临时的，这个参数为了是代码和数据持久化保存。\njupyter/tensorflow-notebook 镜像名称，如果本地不存在，docker会自动从hub.docker.com上获取\n\n常见问题：\n1 Couldn’t connect to Docker daemon at http+unix://var/run/docker.sock - is it running? \n有次重启虚拟机后突然遇到这个问题，解决方法：\n\n```\nsudo vi /etc/default/docker\n```\n\n添加一行\n\n```\nDOCKER_OPTS=\"-H tcp://127.0.0.1:4243 -H unix:///var/run/docker.sock\"\n```\n\n再重启docker服务\n\n```\nsudo service docker restart\n```\n\nnote: 重启机器的之前最好先把运行中的docker容器停了\n","slug":"docker常用命令","published":1,"updated":"2020-05-05T11:13:37.721Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9ttxjaa000e83lzah61pkzn","content":"<p>docker的安装以及一些配置参考<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://github.com/widuu/chinese_docker/blob/master/installation/ubuntu.md#Ubuntu%E5%AE%89%E8%A3%85Docker</span><br></pre></td></tr></table></figure></p>\n<a id=\"more\"></a>\n<p>目录挂载<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir /work</span><br><span class=\"line\">sudo mkfs.ext4 /dev/vdc</span><br><span class=\"line\">sudo mount /dev/vdc /work</span><br></pre></td></tr></table></figure></p>\n<p>或者解除挂载<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo umount  /dev/vdc /work</span><br></pre></td></tr></table></figure></p>\n<p>查看挂载情况<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df -h</span><br></pre></td></tr></table></figure></p>\n<p>可参考<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://gist.github.com/gaoyifan/019ad7766f030ab5be50</span><br></pre></td></tr></table></figure></p>\n<p>更改镜像和容器的保存路径<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker info | grep &quot;Docker Root Dir&quot; 查看存储位置</span><br><span class=\"line\">sudo vi /etc/default/docker</span><br></pre></td></tr></table></figure></p>\n<p>添加一行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DOCKER_OPTS=&quot;-g /mnt/docker&quot;</span><br><span class=\"line\">sudo service docker restart</span><br></pre></td></tr></table></figure></p>\n<p>查看docker信息<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker info</span><br></pre></td></tr></table></figure></p>\n<p>查看运行中的容器<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker ps</span><br></pre></td></tr></table></figure></p>\n<p>查看所有容器<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker ps -a</span><br></pre></td></tr></table></figure></p>\n<p>查看本地镜像<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker images</span><br></pre></td></tr></table></figure></p>\n<p>删除镜像<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker rmi $imagename</span><br></pre></td></tr></table></figure></p>\n<p>停止一个正在运行的容器<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker stop $dockername</span><br></pre></td></tr></table></figure></p>\n<p>删除所有停止的容器<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker rm $(docker ps -a -q)</span><br></pre></td></tr></table></figure></p>\n<p>启动一个容器<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker start $dockername</span><br></pre></td></tr></table></figure></p>\n<p>进入一个容器<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker exec -i -t $dockername /bin/sh</span><br></pre></td></tr></table></figure></p>\n<p>docker run的参数说明，例如有用命令启动一个容器<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --name $&quot;dDocker&quot; -d -p 8080:8888 -v /home/tensorflow:/home/jovyan/work jupyter/tensorflow-notebook start-notebook.sh --NotebookApp.token=&apos;&apos;</span><br></pre></td></tr></table></figure></p>\n<p>–name 为容器指定一个名字，如果未指定会随机分配<br>-d 保持后台运行<br>-p 8080:8888 端口映射，8080是宿主机器的端口号，8888是docker端口号，访问时输入 [宿主机器ip：8080]<br>-v /home/tensorflow:/work/jovnan 目录映射，可以理解为共享目录。docker容器是临时的，这个参数为了是代码和数据持久化保存。<br>jupyter/tensorflow-notebook 镜像名称，如果本地不存在，docker会自动从hub.docker.com上获取</p>\n<p>常见问题：<br>1 Couldn’t connect to Docker daemon at http+unix://var/run/docker.sock - is it running?<br>有次重启虚拟机后突然遇到这个问题，解决方法：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vi /etc/default/docker</span><br></pre></td></tr></table></figure>\n<p>添加一行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DOCKER_OPTS=&quot;-H tcp://127.0.0.1:4243 -H unix:///var/run/docker.sock&quot;</span><br></pre></td></tr></table></figure>\n<p>再重启docker服务</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo service docker restart</span><br></pre></td></tr></table></figure>\n<p>note: 重启机器的之前最好先把运行中的docker容器停了</p>\n","site":{"data":{}},"excerpt":"<p>docker的安装以及一些配置参考<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://github.com/widuu/chinese_docker/blob/master/installation/ubuntu.md#Ubuntu%E5%AE%89%E8%A3%85Docker</span><br></pre></td></tr></table></figure></p>","more":"<p>目录挂载<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir /work</span><br><span class=\"line\">sudo mkfs.ext4 /dev/vdc</span><br><span class=\"line\">sudo mount /dev/vdc /work</span><br></pre></td></tr></table></figure></p>\n<p>或者解除挂载<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo umount  /dev/vdc /work</span><br></pre></td></tr></table></figure></p>\n<p>查看挂载情况<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df -h</span><br></pre></td></tr></table></figure></p>\n<p>可参考<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://gist.github.com/gaoyifan/019ad7766f030ab5be50</span><br></pre></td></tr></table></figure></p>\n<p>更改镜像和容器的保存路径<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker info | grep &quot;Docker Root Dir&quot; 查看存储位置</span><br><span class=\"line\">sudo vi /etc/default/docker</span><br></pre></td></tr></table></figure></p>\n<p>添加一行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DOCKER_OPTS=&quot;-g /mnt/docker&quot;</span><br><span class=\"line\">sudo service docker restart</span><br></pre></td></tr></table></figure></p>\n<p>查看docker信息<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker info</span><br></pre></td></tr></table></figure></p>\n<p>查看运行中的容器<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker ps</span><br></pre></td></tr></table></figure></p>\n<p>查看所有容器<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker ps -a</span><br></pre></td></tr></table></figure></p>\n<p>查看本地镜像<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker images</span><br></pre></td></tr></table></figure></p>\n<p>删除镜像<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker rmi $imagename</span><br></pre></td></tr></table></figure></p>\n<p>停止一个正在运行的容器<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker stop $dockername</span><br></pre></td></tr></table></figure></p>\n<p>删除所有停止的容器<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker rm $(docker ps -a -q)</span><br></pre></td></tr></table></figure></p>\n<p>启动一个容器<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker start $dockername</span><br></pre></td></tr></table></figure></p>\n<p>进入一个容器<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker exec -i -t $dockername /bin/sh</span><br></pre></td></tr></table></figure></p>\n<p>docker run的参数说明，例如有用命令启动一个容器<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --name $&quot;dDocker&quot; -d -p 8080:8888 -v /home/tensorflow:/home/jovyan/work jupyter/tensorflow-notebook start-notebook.sh --NotebookApp.token=&apos;&apos;</span><br></pre></td></tr></table></figure></p>\n<p>–name 为容器指定一个名字，如果未指定会随机分配<br>-d 保持后台运行<br>-p 8080:8888 端口映射，8080是宿主机器的端口号，8888是docker端口号，访问时输入 [宿主机器ip：8080]<br>-v /home/tensorflow:/work/jovnan 目录映射，可以理解为共享目录。docker容器是临时的，这个参数为了是代码和数据持久化保存。<br>jupyter/tensorflow-notebook 镜像名称，如果本地不存在，docker会自动从hub.docker.com上获取</p>\n<p>常见问题：<br>1 Couldn’t connect to Docker daemon at http+unix://var/run/docker.sock - is it running?<br>有次重启虚拟机后突然遇到这个问题，解决方法：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vi /etc/default/docker</span><br></pre></td></tr></table></figure>\n<p>添加一行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DOCKER_OPTS=&quot;-H tcp://127.0.0.1:4243 -H unix:///var/run/docker.sock&quot;</span><br></pre></td></tr></table></figure>\n<p>再重启docker服务</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo service docker restart</span><br></pre></td></tr></table></figure>\n<p>note: 重启机器的之前最好先把运行中的docker容器停了</p>"},{"title":"emptydir与hostpath","date":"2019-09-01T07:41:19.000Z","_content":"","source":"_posts/emptydir与hostpath.md","raw":"---\ntitle: emptydir与hostpath\ndate: 2019-09-01 15:41:19\ntags:\n---\n","slug":"emptydir与hostpath","published":1,"updated":"2020-05-05T11:13:37.722Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9ttxjac000i83lzmiglk2xo","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"eclipse导入maven web项目注意事项","date":"2017-04-29T07:02:06.000Z","_content":"eclipse导入已经存在的maven web项目还需要进行一些简单的配置，这里记录一下可能遇到的情况。\n\n导入方法：\nFile -> Import -> Maven -> Existing Maven Projects\n\n导入过程可能的报错及解决方法\n<!-- more --> \n1 pom.xml\n报错：Plugin execution not covered by lifecycle configuration\n解决方法：在\n```\n<build>和<plugins>\n```\n之间加入\n```\n<pluginManagement>\n```\n如果build出错，在\n```\n<build></build>\n```\n之间找个地方加入\n```\n<defaultGoal>compile</defaultGoal>\n```\n\n2 环境问题\n出现的错误如下\n![](http://i4.buimg.com/4851/5aa0b41fc757410e.png)\n解决方法：\n(1) Properties -> Java Build Path \n\t修改JRE版本为1.8\n(2) Properties ->JavaCompiler  \n\t看一下Compiler compliance level 的版本是否为1.8，如果不是修改为1.8\n(3) Properties -> Project Facets\n\t勾选Danamic Web Module Versions为3.0\n\t勾选Java为 1.8\n\t如下图所示：\n\t![](http://i4.buimg.com/4851/d37f161f8918df45.png)\n(4) Properties -> Deployment Assembly \n\t查看是否有加入Maven Dependencies以及对应的路径是否一样\n\t示例：\n\t![](http://i4.buimg.com/4851/22e55d515aa09e6f.png)\n\n3 如果发现Properties中没有Deployment Assembly\n解决方法：\n(1) 在该项目的工作区文件夹找到.project文件,用文本编辑器打开\n(2) 在文件内添加如下代码：\n```\n<nature>org.eclipse.wst.common.modulecore.ModuleCoreNature</nature>\n```\n(3) 重启eclipse可以在Properties中看到Deployment Assembly\n\n以上配置好之后可以试着Run as -> Run On Server,看是否能在tomcat中跑起来。","source":"_posts/eclipse导入maven-web项目注意事项.md","raw":"---\ntitle: eclipse导入maven web项目注意事项\ndate: 2017-04-29 15:02:06\ncategories:\n\t - environment\ntags: [web,eclipse,java]\n---\neclipse导入已经存在的maven web项目还需要进行一些简单的配置，这里记录一下可能遇到的情况。\n\n导入方法：\nFile -> Import -> Maven -> Existing Maven Projects\n\n导入过程可能的报错及解决方法\n<!-- more --> \n1 pom.xml\n报错：Plugin execution not covered by lifecycle configuration\n解决方法：在\n```\n<build>和<plugins>\n```\n之间加入\n```\n<pluginManagement>\n```\n如果build出错，在\n```\n<build></build>\n```\n之间找个地方加入\n```\n<defaultGoal>compile</defaultGoal>\n```\n\n2 环境问题\n出现的错误如下\n![](http://i4.buimg.com/4851/5aa0b41fc757410e.png)\n解决方法：\n(1) Properties -> Java Build Path \n\t修改JRE版本为1.8\n(2) Properties ->JavaCompiler  \n\t看一下Compiler compliance level 的版本是否为1.8，如果不是修改为1.8\n(3) Properties -> Project Facets\n\t勾选Danamic Web Module Versions为3.0\n\t勾选Java为 1.8\n\t如下图所示：\n\t![](http://i4.buimg.com/4851/d37f161f8918df45.png)\n(4) Properties -> Deployment Assembly \n\t查看是否有加入Maven Dependencies以及对应的路径是否一样\n\t示例：\n\t![](http://i4.buimg.com/4851/22e55d515aa09e6f.png)\n\n3 如果发现Properties中没有Deployment Assembly\n解决方法：\n(1) 在该项目的工作区文件夹找到.project文件,用文本编辑器打开\n(2) 在文件内添加如下代码：\n```\n<nature>org.eclipse.wst.common.modulecore.ModuleCoreNature</nature>\n```\n(3) 重启eclipse可以在Properties中看到Deployment Assembly\n\n以上配置好之后可以试着Run as -> Run On Server,看是否能在tomcat中跑起来。","slug":"eclipse导入maven-web项目注意事项","published":1,"updated":"2020-05-05T11:13:37.721Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9ttxjad000j83lzlha7g3kd","content":"<p>eclipse导入已经存在的maven web项目还需要进行一些简单的配置，这里记录一下可能遇到的情况。</p>\n<p>导入方法：<br>File -&gt; Import -&gt; Maven -&gt; Existing Maven Projects</p>\n<p>导入过程可能的报错及解决方法<br><a id=\"more\"></a><br>1 pom.xml<br>报错：Plugin execution not covered by lifecycle configuration<br>解决方法：在<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;build&gt;和&lt;plugins&gt;</span><br></pre></td></tr></table></figure></p>\n<p>之间加入<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;pluginManagement&gt;</span><br></pre></td></tr></table></figure></p>\n<p>如果build出错，在<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;build&gt;&lt;/build&gt;</span><br></pre></td></tr></table></figure></p>\n<p>之间找个地方加入<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;defaultGoal&gt;compile&lt;/defaultGoal&gt;</span><br></pre></td></tr></table></figure></p>\n<p>2 环境问题<br>出现的错误如下<br><img src=\"http://i4.buimg.com/4851/5aa0b41fc757410e.png\" alt><br>解决方法：<br>(1) Properties -&gt; Java Build Path<br>    修改JRE版本为1.8<br>(2) Properties -&gt;JavaCompiler<br>    看一下Compiler compliance level 的版本是否为1.8，如果不是修改为1.8<br>(3) Properties -&gt; Project Facets<br>    勾选Danamic Web Module Versions为3.0<br>    勾选Java为 1.8<br>    如下图所示：<br>    <img src=\"http://i4.buimg.com/4851/d37f161f8918df45.png\" alt><br>(4) Properties -&gt; Deployment Assembly<br>    查看是否有加入Maven Dependencies以及对应的路径是否一样<br>    示例：<br>    <img src=\"http://i4.buimg.com/4851/22e55d515aa09e6f.png\" alt></p>\n<p>3 如果发现Properties中没有Deployment Assembly<br>解决方法：<br>(1) 在该项目的工作区文件夹找到.project文件,用文本编辑器打开<br>(2) 在文件内添加如下代码：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;nature&gt;org.eclipse.wst.common.modulecore.ModuleCoreNature&lt;/nature&gt;</span><br></pre></td></tr></table></figure></p>\n<p>(3) 重启eclipse可以在Properties中看到Deployment Assembly</p>\n<p>以上配置好之后可以试着Run as -&gt; Run On Server,看是否能在tomcat中跑起来。</p>\n","site":{"data":{}},"excerpt":"<p>eclipse导入已经存在的maven web项目还需要进行一些简单的配置，这里记录一下可能遇到的情况。</p>\n<p>导入方法：<br>File -&gt; Import -&gt; Maven -&gt; Existing Maven Projects</p>\n<p>导入过程可能的报错及解决方法<br>","more":"<br>1 pom.xml<br>报错：Plugin execution not covered by lifecycle configuration<br>解决方法：在<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;build&gt;和&lt;plugins&gt;</span><br></pre></td></tr></table></figure></p>\n<p>之间加入<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;pluginManagement&gt;</span><br></pre></td></tr></table></figure></p>\n<p>如果build出错，在<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;build&gt;&lt;/build&gt;</span><br></pre></td></tr></table></figure></p>\n<p>之间找个地方加入<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;defaultGoal&gt;compile&lt;/defaultGoal&gt;</span><br></pre></td></tr></table></figure></p>\n<p>2 环境问题<br>出现的错误如下<br><img src=\"http://i4.buimg.com/4851/5aa0b41fc757410e.png\" alt><br>解决方法：<br>(1) Properties -&gt; Java Build Path<br>    修改JRE版本为1.8<br>(2) Properties -&gt;JavaCompiler<br>    看一下Compiler compliance level 的版本是否为1.8，如果不是修改为1.8<br>(3) Properties -&gt; Project Facets<br>    勾选Danamic Web Module Versions为3.0<br>    勾选Java为 1.8<br>    如下图所示：<br>    <img src=\"http://i4.buimg.com/4851/d37f161f8918df45.png\" alt><br>(4) Properties -&gt; Deployment Assembly<br>    查看是否有加入Maven Dependencies以及对应的路径是否一样<br>    示例：<br>    <img src=\"http://i4.buimg.com/4851/22e55d515aa09e6f.png\" alt></p>\n<p>3 如果发现Properties中没有Deployment Assembly<br>解决方法：<br>(1) 在该项目的工作区文件夹找到.project文件,用文本编辑器打开<br>(2) 在文件内添加如下代码：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;nature&gt;org.eclipse.wst.common.modulecore.ModuleCoreNature&lt;/nature&gt;</span><br></pre></td></tr></table></figure></p>\n<p>(3) 重启eclipse可以在Properties中看到Deployment Assembly</p>\n<p>以上配置好之后可以试着Run as -&gt; Run On Server,看是否能在tomcat中跑起来。</p>"},{"title":"jvm学习路线","date":"2019-06-07T14:47:09.000Z","_content":"以前谈起jvm总是一脸懵，第一不理解jvm为何物，第二不理解为什么要去了解它，第三想了解但不知从哪里开始。最近工作中做了一些java项目，写了很多java代码，也接触到异常，线程，内存等等问题，慢慢开始对jvm有直观地体会，想成为一名优秀java开发，应该要深入了解它。最近看了一些博客，先列好jvm的知识框架，后续再系统学习《深入理解java虚拟机》，把具体内容补上。\n<!-- more --> \njvm最核心的内容包括\n1 内存管理机制\n2 类加载的过程\n3 垃圾回收机制\n另外还需要掌握常用的性能调优和故障排除工具和命令","source":"_posts/jvm学习路线.md","raw":"---\ntitle: jvm学习路线\ndate: 2019-06-07 22:47:09\ncategories:\n\t - developing\ntags: [java,jvm]\n---\n以前谈起jvm总是一脸懵，第一不理解jvm为何物，第二不理解为什么要去了解它，第三想了解但不知从哪里开始。最近工作中做了一些java项目，写了很多java代码，也接触到异常，线程，内存等等问题，慢慢开始对jvm有直观地体会，想成为一名优秀java开发，应该要深入了解它。最近看了一些博客，先列好jvm的知识框架，后续再系统学习《深入理解java虚拟机》，把具体内容补上。\n<!-- more --> \njvm最核心的内容包括\n1 内存管理机制\n2 类加载的过程\n3 垃圾回收机制\n另外还需要掌握常用的性能调优和故障排除工具和命令","slug":"jvm学习路线","published":1,"updated":"2020-05-05T11:13:37.722Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9ttxjae000n83lzn9mlugh7","content":"<p>以前谈起jvm总是一脸懵，第一不理解jvm为何物，第二不理解为什么要去了解它，第三想了解但不知从哪里开始。最近工作中做了一些java项目，写了很多java代码，也接触到异常，线程，内存等等问题，慢慢开始对jvm有直观地体会，想成为一名优秀java开发，应该要深入了解它。最近看了一些博客，先列好jvm的知识框架，后续再系统学习《深入理解java虚拟机》，把具体内容补上。<br><a id=\"more\"></a><br>jvm最核心的内容包括<br>1 内存管理机制<br>2 类加载的过程<br>3 垃圾回收机制<br>另外还需要掌握常用的性能调优和故障排除工具和命令</p>\n","site":{"data":{}},"excerpt":"<p>以前谈起jvm总是一脸懵，第一不理解jvm为何物，第二不理解为什么要去了解它，第三想了解但不知从哪里开始。最近工作中做了一些java项目，写了很多java代码，也接触到异常，线程，内存等等问题，慢慢开始对jvm有直观地体会，想成为一名优秀java开发，应该要深入了解它。最近看了一些博客，先列好jvm的知识框架，后续再系统学习《深入理解java虚拟机》，把具体内容补上。<br>","more":"<br>jvm最核心的内容包括<br>1 内存管理机制<br>2 类加载的过程<br>3 垃圾回收机制<br>另外还需要掌握常用的性能调优和故障排除工具和命令</p>"},{"title":"keystore和truststore","date":"2019-09-10T14:41:16.000Z","_content":"dddd\n","source":"_posts/keystore和truststore.md","raw":"---\ntitle: keystore和truststore\ndate: 2019-09-10 22:41:16\ncategories:\n\t - security\ntags: [java]\n---\ndddd\n","slug":"keystore和truststore","published":1,"updated":"2020-05-05T11:16:15.246Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9ttxjaf000p83lz1nrkc6jq","content":"<p>dddd</p>\n","site":{"data":{}},"excerpt":"","more":"<p>dddd</p>\n"},{"title":"mysql一种千万数量级表的join方法","date":"2017-07-18T12:25:52.000Z","_content":"mysql中, join, left join, right join都可以将两张表连接起来，但如果表中的数据太多，例如两张表中都有1000w+的数据，直接join一定会出错。\n<!-- more --> \n一种批量处理的方法是，每次从一张表中load若干行数据（limit m,n），和另一张做join, 结果保存到一张新表里。\n可以写一个程序或脚本来处理，基本语句如下：\n```\nsql1 = \"insert ignore into QA select t.id,t.title, t.body, Answers.body,t.tags from (select Questions.id,Questions.title,Questions.body,Questions.answerid,Questions.tags from Questions limit \"\nsql2 = \",10000) as t left join Answers on t.answerid=Answers.id\"\ni=0\nwhile(i<maxlen):\n\texesql=sql1+str(i)+sql2\n\ti=i+10000\n\tcur.execute(exesql)\n\tconn.commit()\n```","source":"_posts/mysql一种千万数量级表的join方法.md","raw":"---\ntitle: mysql一种千万数量级表的join方法\ndate: 2017-07-18 20:25:52\ncategories:\n\t - performance\ntags: mysql\n---\nmysql中, join, left join, right join都可以将两张表连接起来，但如果表中的数据太多，例如两张表中都有1000w+的数据，直接join一定会出错。\n<!-- more --> \n一种批量处理的方法是，每次从一张表中load若干行数据（limit m,n），和另一张做join, 结果保存到一张新表里。\n可以写一个程序或脚本来处理，基本语句如下：\n```\nsql1 = \"insert ignore into QA select t.id,t.title, t.body, Answers.body,t.tags from (select Questions.id,Questions.title,Questions.body,Questions.answerid,Questions.tags from Questions limit \"\nsql2 = \",10000) as t left join Answers on t.answerid=Answers.id\"\ni=0\nwhile(i<maxlen):\n\texesql=sql1+str(i)+sql2\n\ti=i+10000\n\tcur.execute(exesql)\n\tconn.commit()\n```","slug":"mysql一种千万数量级表的join方法","published":1,"updated":"2020-05-05T11:13:37.722Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9ttxjag000u83lzf2mk2nih","content":"<p>mysql中, join, left join, right join都可以将两张表连接起来，但如果表中的数据太多，例如两张表中都有1000w+的数据，直接join一定会出错。<br><a id=\"more\"></a><br>一种批量处理的方法是，每次从一张表中load若干行数据（limit m,n），和另一张做join, 结果保存到一张新表里。<br>可以写一个程序或脚本来处理，基本语句如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sql1 = &quot;insert ignore into QA select t.id,t.title, t.body, Answers.body,t.tags from (select Questions.id,Questions.title,Questions.body,Questions.answerid,Questions.tags from Questions limit &quot;</span><br><span class=\"line\">sql2 = &quot;,10000) as t left join Answers on t.answerid=Answers.id&quot;</span><br><span class=\"line\">i=0</span><br><span class=\"line\">while(i&lt;maxlen):</span><br><span class=\"line\">\texesql=sql1+str(i)+sql2</span><br><span class=\"line\">\ti=i+10000</span><br><span class=\"line\">\tcur.execute(exesql)</span><br><span class=\"line\">\tconn.commit()</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<p>mysql中, join, left join, right join都可以将两张表连接起来，但如果表中的数据太多，例如两张表中都有1000w+的数据，直接join一定会出错。<br>","more":"<br>一种批量处理的方法是，每次从一张表中load若干行数据（limit m,n），和另一张做join, 结果保存到一张新表里。<br>可以写一个程序或脚本来处理，基本语句如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sql1 = &quot;insert ignore into QA select t.id,t.title, t.body, Answers.body,t.tags from (select Questions.id,Questions.title,Questions.body,Questions.answerid,Questions.tags from Questions limit &quot;</span><br><span class=\"line\">sql2 = &quot;,10000) as t left join Answers on t.answerid=Answers.id&quot;</span><br><span class=\"line\">i=0</span><br><span class=\"line\">while(i&lt;maxlen):</span><br><span class=\"line\">\texesql=sql1+str(i)+sql2</span><br><span class=\"line\">\ti=i+10000</span><br><span class=\"line\">\tcur.execute(exesql)</span><br><span class=\"line\">\tconn.commit()</span><br></pre></td></tr></table></figure></p>"},{"title":"mysql批量插入数据","date":"2017-07-18T12:22:44.000Z","_content":"在SQL中我们通常用如下语句进行数据的插入:\n```\ninsert into tablename (fieldname_1,...,filedname_n) value(value_1,...,value_n);\n```\n<!-- more --> \n但如果我们需要插入的数据量很大，这样的语句必然会出现性能问题。例如，我们需要插入1000w条的数据，那么就需要1000w条insert语句，并且每执行一条语句都需要commit一次才能真正插入到数据库中，其效率可想而知。因此，为解决这一性能瓶颈问题，MYSQL的官方文档也提出了批量插入的解决方法。\n\n我们可以用如下语句进行数据的批量插入：\n```\ninsert into tablename (fieldname_1,...,filedname_n) values (value_1,...,value_n),(value_1,...,value_n),...,(value_1,...,value_n);\n```\n多条数据用value隔开，执行后一次性次commit。\n\n该方法涉及到的问题：\n1  如果用java,请务必使用StringBuilder或者StringBuffered进行字符串拼接，千万不要用String，否则效率会非常低。\n2  如果担心sql语句有最大长度限制，可以查看\n```\nC:\\ProgramData\\MySQL\\MySQL Server 5.7\n```\n文件夹中的my.ini文件（这是个隐藏文件夹），找到max_allowed_packet属性，如果需要进行修改即可。","source":"_posts/mysql批量插入数据.md","raw":"---\ntitle: mysql批量插入数据\ndate: 2017-07-18 20:22:44\ncategories:\n\t - performance\ntags: mysql\n---\n在SQL中我们通常用如下语句进行数据的插入:\n```\ninsert into tablename (fieldname_1,...,filedname_n) value(value_1,...,value_n);\n```\n<!-- more --> \n但如果我们需要插入的数据量很大，这样的语句必然会出现性能问题。例如，我们需要插入1000w条的数据，那么就需要1000w条insert语句，并且每执行一条语句都需要commit一次才能真正插入到数据库中，其效率可想而知。因此，为解决这一性能瓶颈问题，MYSQL的官方文档也提出了批量插入的解决方法。\n\n我们可以用如下语句进行数据的批量插入：\n```\ninsert into tablename (fieldname_1,...,filedname_n) values (value_1,...,value_n),(value_1,...,value_n),...,(value_1,...,value_n);\n```\n多条数据用value隔开，执行后一次性次commit。\n\n该方法涉及到的问题：\n1  如果用java,请务必使用StringBuilder或者StringBuffered进行字符串拼接，千万不要用String，否则效率会非常低。\n2  如果担心sql语句有最大长度限制，可以查看\n```\nC:\\ProgramData\\MySQL\\MySQL Server 5.7\n```\n文件夹中的my.ini文件（这是个隐藏文件夹），找到max_allowed_packet属性，如果需要进行修改即可。","slug":"mysql批量插入数据","published":1,"updated":"2020-05-05T11:13:37.722Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9ttxjai000x83lzwgcvomzu","content":"<p>在SQL中我们通常用如下语句进行数据的插入:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">insert into tablename (fieldname_1,...,filedname_n) value(value_1,...,value_n);</span><br></pre></td></tr></table></figure></p>\n<a id=\"more\"></a> \n<p>但如果我们需要插入的数据量很大，这样的语句必然会出现性能问题。例如，我们需要插入1000w条的数据，那么就需要1000w条insert语句，并且每执行一条语句都需要commit一次才能真正插入到数据库中，其效率可想而知。因此，为解决这一性能瓶颈问题，MYSQL的官方文档也提出了批量插入的解决方法。</p>\n<p>我们可以用如下语句进行数据的批量插入：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">insert into tablename (fieldname_1,...,filedname_n) values (value_1,...,value_n),(value_1,...,value_n),...,(value_1,...,value_n);</span><br></pre></td></tr></table></figure></p>\n<p>多条数据用value隔开，执行后一次性次commit。</p>\n<p>该方法涉及到的问题：<br>1  如果用java,请务必使用StringBuilder或者StringBuffered进行字符串拼接，千万不要用String，否则效率会非常低。<br>2  如果担心sql语句有最大长度限制，可以查看<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">C:\\ProgramData\\MySQL\\MySQL Server 5.7</span><br></pre></td></tr></table></figure></p>\n<p>文件夹中的my.ini文件（这是个隐藏文件夹），找到max_allowed_packet属性，如果需要进行修改即可。</p>\n","site":{"data":{}},"excerpt":"<p>在SQL中我们通常用如下语句进行数据的插入:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">insert into tablename (fieldname_1,...,filedname_n) value(value_1,...,value_n);</span><br></pre></td></tr></table></figure></p>","more":"<p>但如果我们需要插入的数据量很大，这样的语句必然会出现性能问题。例如，我们需要插入1000w条的数据，那么就需要1000w条insert语句，并且每执行一条语句都需要commit一次才能真正插入到数据库中，其效率可想而知。因此，为解决这一性能瓶颈问题，MYSQL的官方文档也提出了批量插入的解决方法。</p>\n<p>我们可以用如下语句进行数据的批量插入：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">insert into tablename (fieldname_1,...,filedname_n) values (value_1,...,value_n),(value_1,...,value_n),...,(value_1,...,value_n);</span><br></pre></td></tr></table></figure></p>\n<p>多条数据用value隔开，执行后一次性次commit。</p>\n<p>该方法涉及到的问题：<br>1  如果用java,请务必使用StringBuilder或者StringBuffered进行字符串拼接，千万不要用String，否则效率会非常低。<br>2  如果担心sql语句有最大长度限制，可以查看<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">C:\\ProgramData\\MySQL\\MySQL Server 5.7</span><br></pre></td></tr></table></figure></p>\n<p>文件夹中的my.ini文件（这是个隐藏文件夹），找到max_allowed_packet属性，如果需要进行修改即可。</p>"},{"title":"python开发环境配置","date":"2018-06-23T14:03:36.000Z","_content":"\n1 安装virtualenv\n(1) 安装pip\n\n```\nsudo apt-get update\nsudo apt-get upgrade\nsudo apt-get install python-pip\n```\n\n<!-- more -->\n(2) 安装virtualenv\n\n```\nsudo apt-get install python-virtualenv\n```\n\n(3) 创建不同版本python环境\n进入需要虚拟化环境的目录，如\n\n```\ncd /home/yujluo\n```\n\n运行命令\n\n```\nvirtualenv -p /usr/bin/python3 py3env\n```\n-p指定python版本 py3env为虚拟的环境目录\n\n激活环境\n\n```\nsource /home/yujluo/py3env/activate\n```\n\n退出环境\n\n```\ndeactivate\n```\n\n2 使用jupyter notebook\n\n(1) 安装jupyter notebook\npip install jupyter notebook\n\n(2) 开启notebook\n进入工作目录，如\n\n```\ncd /home/yujluo\n```\n\n开启服务\njupyter notebook\n\n(3) 远程访问jupyter notebook\n最简单的是从本地建立一个ssh通道到服务器\n\n```\nssh <用户名>@<ip地址> -L127.0.0.1:1234:127.0.0.1:8888\n```\n然后再本浏览器输入localhost:1234再在服务器上记下token输入就可以使用了。","source":"_posts/python开发环境配置.md","raw":"---\ntitle: python开发环境配置\ndate: 2018-06-23 22:03:36\ncategories:\n\t - environment\ntags: [ubuntu, python]\n---\n\n1 安装virtualenv\n(1) 安装pip\n\n```\nsudo apt-get update\nsudo apt-get upgrade\nsudo apt-get install python-pip\n```\n\n<!-- more -->\n(2) 安装virtualenv\n\n```\nsudo apt-get install python-virtualenv\n```\n\n(3) 创建不同版本python环境\n进入需要虚拟化环境的目录，如\n\n```\ncd /home/yujluo\n```\n\n运行命令\n\n```\nvirtualenv -p /usr/bin/python3 py3env\n```\n-p指定python版本 py3env为虚拟的环境目录\n\n激活环境\n\n```\nsource /home/yujluo/py3env/activate\n```\n\n退出环境\n\n```\ndeactivate\n```\n\n2 使用jupyter notebook\n\n(1) 安装jupyter notebook\npip install jupyter notebook\n\n(2) 开启notebook\n进入工作目录，如\n\n```\ncd /home/yujluo\n```\n\n开启服务\njupyter notebook\n\n(3) 远程访问jupyter notebook\n最简单的是从本地建立一个ssh通道到服务器\n\n```\nssh <用户名>@<ip地址> -L127.0.0.1:1234:127.0.0.1:8888\n```\n然后再本浏览器输入localhost:1234再在服务器上记下token输入就可以使用了。","slug":"python开发环境配置","published":1,"updated":"2020-05-05T11:13:37.722Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9ttxjak001083lz1n8qtash","content":"<p>1 安装virtualenv<br>(1) 安装pip</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get update</span><br><span class=\"line\">sudo apt-get upgrade</span><br><span class=\"line\">sudo apt-get install python-pip</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<p>(2) 安装virtualenv</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install python-virtualenv</span><br></pre></td></tr></table></figure>\n<p>(3) 创建不同版本python环境<br>进入需要虚拟化环境的目录，如</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /home/yujluo</span><br></pre></td></tr></table></figure>\n<p>运行命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">virtualenv -p /usr/bin/python3 py3env</span><br></pre></td></tr></table></figure>\n<p>-p指定python版本 py3env为虚拟的环境目录</p>\n<p>激活环境</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source /home/yujluo/py3env/activate</span><br></pre></td></tr></table></figure>\n<p>退出环境</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deactivate</span><br></pre></td></tr></table></figure>\n<p>2 使用jupyter notebook</p>\n<p>(1) 安装jupyter notebook<br>pip install jupyter notebook</p>\n<p>(2) 开启notebook<br>进入工作目录，如</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /home/yujluo</span><br></pre></td></tr></table></figure>\n<p>开启服务<br>jupyter notebook</p>\n<p>(3) 远程访问jupyter notebook<br>最简单的是从本地建立一个ssh通道到服务器</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh &lt;用户名&gt;@&lt;ip地址&gt; -L127.0.0.1:1234:127.0.0.1:8888</span><br></pre></td></tr></table></figure>\n<p>然后再本浏览器输入localhost:1234再在服务器上记下token输入就可以使用了。</p>\n","site":{"data":{}},"excerpt":"<p>1 安装virtualenv<br>(1) 安装pip</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get update</span><br><span class=\"line\">sudo apt-get upgrade</span><br><span class=\"line\">sudo apt-get install python-pip</span><br></pre></td></tr></table></figure>","more":"<p>(2) 安装virtualenv</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install python-virtualenv</span><br></pre></td></tr></table></figure>\n<p>(3) 创建不同版本python环境<br>进入需要虚拟化环境的目录，如</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /home/yujluo</span><br></pre></td></tr></table></figure>\n<p>运行命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">virtualenv -p /usr/bin/python3 py3env</span><br></pre></td></tr></table></figure>\n<p>-p指定python版本 py3env为虚拟的环境目录</p>\n<p>激活环境</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source /home/yujluo/py3env/activate</span><br></pre></td></tr></table></figure>\n<p>退出环境</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deactivate</span><br></pre></td></tr></table></figure>\n<p>2 使用jupyter notebook</p>\n<p>(1) 安装jupyter notebook<br>pip install jupyter notebook</p>\n<p>(2) 开启notebook<br>进入工作目录，如</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /home/yujluo</span><br></pre></td></tr></table></figure>\n<p>开启服务<br>jupyter notebook</p>\n<p>(3) 远程访问jupyter notebook<br>最简单的是从本地建立一个ssh通道到服务器</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh &lt;用户名&gt;@&lt;ip地址&gt; -L127.0.0.1:1234:127.0.0.1:8888</span><br></pre></td></tr></table></figure>\n<p>然后再本浏览器输入localhost:1234再在服务器上记下token输入就可以使用了。</p>"},{"title":"ubuntu14.04安装fasttext","date":"2017-06-16T14:40:06.000Z","_content":"```\nsudo apt-get install python-numpy\nsudo apt-get install python-scipy\n```\n<!-- more --> \n安装pip\n```\nwget https://bootstrap.pypa.io/get-pip.py\npython get-pip.py\npip -V #查看pip版本\n```\n\n安装Cpython\n```\nsudo pip install Cython --install-option=\"--no-cython-compile\"\n```\n\n安装fasttext\n```\nsudo pip install fasttext\n```","source":"_posts/ubuntu14-04安装fasttext.md","raw":"---\ntitle: ubuntu14.04安装fasttext\ndate: 2017-06-16 22:40:06\ncategories:\n\t - environment\ntags: [linux,python,deeplearning]\n---\n```\nsudo apt-get install python-numpy\nsudo apt-get install python-scipy\n```\n<!-- more --> \n安装pip\n```\nwget https://bootstrap.pypa.io/get-pip.py\npython get-pip.py\npip -V #查看pip版本\n```\n\n安装Cpython\n```\nsudo pip install Cython --install-option=\"--no-cython-compile\"\n```\n\n安装fasttext\n```\nsudo pip install fasttext\n```","slug":"ubuntu14-04安装fasttext","published":1,"updated":"2020-05-05T11:13:37.722Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9ttxjal001383lza5m99ubn","content":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install python-numpy</span><br><span class=\"line\">sudo apt-get install python-scipy</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a> \n<p>安装pip<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://bootstrap.pypa.io/get-pip.py</span><br><span class=\"line\">python get-pip.py</span><br><span class=\"line\">pip -V #查看pip版本</span><br></pre></td></tr></table></figure></p>\n<p>安装Cpython<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo pip install Cython --install-option=&quot;--no-cython-compile&quot;</span><br></pre></td></tr></table></figure></p>\n<p>安装fasttext<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo pip install fasttext</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install python-numpy</span><br><span class=\"line\">sudo apt-get install python-scipy</span><br></pre></td></tr></table></figure>","more":"<p>安装pip<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://bootstrap.pypa.io/get-pip.py</span><br><span class=\"line\">python get-pip.py</span><br><span class=\"line\">pip -V #查看pip版本</span><br></pre></td></tr></table></figure></p>\n<p>安装Cpython<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo pip install Cython --install-option=&quot;--no-cython-compile&quot;</span><br></pre></td></tr></table></figure></p>\n<p>安装fasttext<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo pip install fasttext</span><br></pre></td></tr></table></figure></p>"},{"title":"ubuntu安装mysql并开启远程连接","date":"2017-06-16T14:53:19.000Z","_content":"```\nsudo apt-get install mysql-server\nsudo apt-get install mysql-client\nsudo apt-get install libmysqlclient-dev\n```\n<!-- more --> \n安装过程中会提示设置密码什么的，注意设置了不要忘了，安装完成之后可以使用如下命令来检查是否安装成功：\n```\nsudo netstat -tap | grep mysql\n```\n\n通过上述命令检查之后，如果看到有mysql 的socket处于 listen 状态则表示安装成功。\n登陆mysql数据库可以通过如下命令：\n```\nmysql -u root -p\n```\n\n开启远程服务\n\n例如，你想root使用123456从任何主机连接到mysql服务器。\n\n1 首先，赋给root用户权限\n```\nGRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY '123456' WITH GRANT OPTION;\nFLUSH PRIVILEGES;\n```\n\n2 修改my.cnf文件\n\n编辑文件\n```\nsudo vi /etc/mysql/my.cnf\n```\n注释掉这句，127.0.0.1是只允许本地访问\n```\n#bind-address = 127.0.0.1\n```\n\n3 重启mysql服务\n```\nsudo /etc/init.d/mysql restart\n```","source":"_posts/ubuntu安装mysql并开启远程连接.md","raw":"---\ntitle: ubuntu安装mysql并开启远程连接\ndate: 2017-06-16 22:53:19\ncategories:\n\t - environment\ntags: [linux, mysql]\n---\n```\nsudo apt-get install mysql-server\nsudo apt-get install mysql-client\nsudo apt-get install libmysqlclient-dev\n```\n<!-- more --> \n安装过程中会提示设置密码什么的，注意设置了不要忘了，安装完成之后可以使用如下命令来检查是否安装成功：\n```\nsudo netstat -tap | grep mysql\n```\n\n通过上述命令检查之后，如果看到有mysql 的socket处于 listen 状态则表示安装成功。\n登陆mysql数据库可以通过如下命令：\n```\nmysql -u root -p\n```\n\n开启远程服务\n\n例如，你想root使用123456从任何主机连接到mysql服务器。\n\n1 首先，赋给root用户权限\n```\nGRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY '123456' WITH GRANT OPTION;\nFLUSH PRIVILEGES;\n```\n\n2 修改my.cnf文件\n\n编辑文件\n```\nsudo vi /etc/mysql/my.cnf\n```\n注释掉这句，127.0.0.1是只允许本地访问\n```\n#bind-address = 127.0.0.1\n```\n\n3 重启mysql服务\n```\nsudo /etc/init.d/mysql restart\n```","slug":"ubuntu安装mysql并开启远程连接","published":1,"updated":"2020-05-05T11:13:37.722Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9ttxjam001683lzferjl4mk","content":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install mysql-server</span><br><span class=\"line\">sudo apt-get install mysql-client</span><br><span class=\"line\">sudo apt-get install libmysqlclient-dev</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a> \n<p>安装过程中会提示设置密码什么的，注意设置了不要忘了，安装完成之后可以使用如下命令来检查是否安装成功：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo netstat -tap | grep mysql</span><br></pre></td></tr></table></figure></p>\n<p>通过上述命令检查之后，如果看到有mysql 的socket处于 listen 状态则表示安装成功。<br>登陆mysql数据库可以通过如下命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql -u root -p</span><br></pre></td></tr></table></figure></p>\n<p>开启远程服务</p>\n<p>例如，你想root使用123456从任何主机连接到mysql服务器。</p>\n<p>1 首先，赋给root用户权限<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GRANT ALL PRIVILEGES ON *.* TO &apos;root&apos;@&apos;%&apos; IDENTIFIED BY &apos;123456&apos; WITH GRANT OPTION;</span><br><span class=\"line\">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure></p>\n<p>2 修改my.cnf文件</p>\n<p>编辑文件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vi /etc/mysql/my.cnf</span><br></pre></td></tr></table></figure></p>\n<p>注释掉这句，127.0.0.1是只允许本地访问<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#bind-address = 127.0.0.1</span><br></pre></td></tr></table></figure></p>\n<p>3 重启mysql服务<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo /etc/init.d/mysql restart</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install mysql-server</span><br><span class=\"line\">sudo apt-get install mysql-client</span><br><span class=\"line\">sudo apt-get install libmysqlclient-dev</span><br></pre></td></tr></table></figure>","more":"<p>安装过程中会提示设置密码什么的，注意设置了不要忘了，安装完成之后可以使用如下命令来检查是否安装成功：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo netstat -tap | grep mysql</span><br></pre></td></tr></table></figure></p>\n<p>通过上述命令检查之后，如果看到有mysql 的socket处于 listen 状态则表示安装成功。<br>登陆mysql数据库可以通过如下命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql -u root -p</span><br></pre></td></tr></table></figure></p>\n<p>开启远程服务</p>\n<p>例如，你想root使用123456从任何主机连接到mysql服务器。</p>\n<p>1 首先，赋给root用户权限<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GRANT ALL PRIVILEGES ON *.* TO &apos;root&apos;@&apos;%&apos; IDENTIFIED BY &apos;123456&apos; WITH GRANT OPTION;</span><br><span class=\"line\">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure></p>\n<p>2 修改my.cnf文件</p>\n<p>编辑文件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vi /etc/mysql/my.cnf</span><br></pre></td></tr></table></figure></p>\n<p>注释掉这句，127.0.0.1是只允许本地访问<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#bind-address = 127.0.0.1</span><br></pre></td></tr></table></figure></p>\n<p>3 重启mysql服务<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo /etc/init.d/mysql restart</span><br></pre></td></tr></table></figure></p>"},{"title":"初识sssd,ldap和kerberos","date":"2019-08-01T13:52:57.000Z","_content":"ldap+kerberos是hadoop这种多租户平台最常用的集中账号管理，认证和授权系统，本文对基本概念进行简单梳理。\n<!-- more --> \n\n# ldap\n存储租户账号\n\n# kerberos\n存储租户密码及组别关系\n## kerberos架构\n由server,client,application组成\n### key distribution center(KDC)\n密钥分发中心，负责管理发放票据，记录授权\n### client\n客户端。配置文件一般位于/etc/krb5.conf\n### application\n使用kerberos进行安全认证的应用\n## 基本概念\n### realm\nkerberos管理领域的标识\n### principal\n当每添加一个用户或服务的时候都需要向kdc添加一条principal，principl的形式为 主名称／实例名@领域名\n### password\n客户的密码一般存在一个keytab文件中\n### credential\ncredential是“证明某个人确定是他自己/某一种行为的确可以发生”的凭据。在不同的使用场景下， credential的具体含义也略有不同：\n+ 对于某个principal个体而言，他的credential就是他的password\n+ 在kerberos认证的环节中，credential就意味着各种各样的ticket\n\n## 基本操作\n客户端获取票据\nkinit -kt /path/to/hadoop.keytab hadoop/主机名@HADOOP.COM\nkinit对应的是向kdc获取TGT的步骤。它会向/etc/krb5.conf中指定的kdc server来发送请求。\n再执行klist查看TGT请求结果\n\n# System Security Services Dameon (SSSD)\n一个守护进程，该进程可以用来访问多种验证服务器，如LDAP，Kerberos等，并提供授权。SSSD是介于本地用户和数据存储之间的进程，本地客户端首先连接SSSD，再由SSSD联系外部资源提供者(一台远程服务器)\n\n* 避免了本地每个客户端程序对认证服务器大量连接，所有本地程序仅联系SSSD，由SSSD连接认证服务器或SSSD缓存，有效的降低了负载。\n* 允许离线授权。SSSD可以缓存远程服务器的用户认证身份，这允许在远程认证服务器宕机是，继续成功授权用户访问必要的资源。\n\n\nReferences\nhttps://blog.csdn.net/liu16659/article/details/80997333 \n\n","source":"_posts/初识sssd-ldap和kerberos.md","raw":"---\ntitle: '初识sssd,ldap和kerberos'\ndate: 2019-08-01 21:52:57\ncategories:\n\t - security\ntags: [Hadoop, linux]\n---\nldap+kerberos是hadoop这种多租户平台最常用的集中账号管理，认证和授权系统，本文对基本概念进行简单梳理。\n<!-- more --> \n\n# ldap\n存储租户账号\n\n# kerberos\n存储租户密码及组别关系\n## kerberos架构\n由server,client,application组成\n### key distribution center(KDC)\n密钥分发中心，负责管理发放票据，记录授权\n### client\n客户端。配置文件一般位于/etc/krb5.conf\n### application\n使用kerberos进行安全认证的应用\n## 基本概念\n### realm\nkerberos管理领域的标识\n### principal\n当每添加一个用户或服务的时候都需要向kdc添加一条principal，principl的形式为 主名称／实例名@领域名\n### password\n客户的密码一般存在一个keytab文件中\n### credential\ncredential是“证明某个人确定是他自己/某一种行为的确可以发生”的凭据。在不同的使用场景下， credential的具体含义也略有不同：\n+ 对于某个principal个体而言，他的credential就是他的password\n+ 在kerberos认证的环节中，credential就意味着各种各样的ticket\n\n## 基本操作\n客户端获取票据\nkinit -kt /path/to/hadoop.keytab hadoop/主机名@HADOOP.COM\nkinit对应的是向kdc获取TGT的步骤。它会向/etc/krb5.conf中指定的kdc server来发送请求。\n再执行klist查看TGT请求结果\n\n# System Security Services Dameon (SSSD)\n一个守护进程，该进程可以用来访问多种验证服务器，如LDAP，Kerberos等，并提供授权。SSSD是介于本地用户和数据存储之间的进程，本地客户端首先连接SSSD，再由SSSD联系外部资源提供者(一台远程服务器)\n\n* 避免了本地每个客户端程序对认证服务器大量连接，所有本地程序仅联系SSSD，由SSSD连接认证服务器或SSSD缓存，有效的降低了负载。\n* 允许离线授权。SSSD可以缓存远程服务器的用户认证身份，这允许在远程认证服务器宕机是，继续成功授权用户访问必要的资源。\n\n\nReferences\nhttps://blog.csdn.net/liu16659/article/details/80997333 \n\n","slug":"初识sssd-ldap和kerberos","published":1,"updated":"2020-05-05T11:13:37.722Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9ttxjan001883lz2ubawu49","content":"<p>ldap+kerberos是hadoop这种多租户平台最常用的集中账号管理，认证和授权系统，本文对基本概念进行简单梳理。<br><a id=\"more\"></a> </p>\n<h1 id=\"ldap\"><a href=\"#ldap\" class=\"headerlink\" title=\"ldap\"></a>ldap</h1><p>存储租户账号</p>\n<h1 id=\"kerberos\"><a href=\"#kerberos\" class=\"headerlink\" title=\"kerberos\"></a>kerberos</h1><p>存储租户密码及组别关系</p>\n<h2 id=\"kerberos架构\"><a href=\"#kerberos架构\" class=\"headerlink\" title=\"kerberos架构\"></a>kerberos架构</h2><p>由server,client,application组成</p>\n<h3 id=\"key-distribution-center-KDC\"><a href=\"#key-distribution-center-KDC\" class=\"headerlink\" title=\"key distribution center(KDC)\"></a>key distribution center(KDC)</h3><p>密钥分发中心，负责管理发放票据，记录授权</p>\n<h3 id=\"client\"><a href=\"#client\" class=\"headerlink\" title=\"client\"></a>client</h3><p>客户端。配置文件一般位于/etc/krb5.conf</p>\n<h3 id=\"application\"><a href=\"#application\" class=\"headerlink\" title=\"application\"></a>application</h3><p>使用kerberos进行安全认证的应用</p>\n<h2 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h2><h3 id=\"realm\"><a href=\"#realm\" class=\"headerlink\" title=\"realm\"></a>realm</h3><p>kerberos管理领域的标识</p>\n<h3 id=\"principal\"><a href=\"#principal\" class=\"headerlink\" title=\"principal\"></a>principal</h3><p>当每添加一个用户或服务的时候都需要向kdc添加一条principal，principl的形式为 主名称／实例名@领域名</p>\n<h3 id=\"password\"><a href=\"#password\" class=\"headerlink\" title=\"password\"></a>password</h3><p>客户的密码一般存在一个keytab文件中</p>\n<h3 id=\"credential\"><a href=\"#credential\" class=\"headerlink\" title=\"credential\"></a>credential</h3><p>credential是“证明某个人确定是他自己/某一种行为的确可以发生”的凭据。在不同的使用场景下， credential的具体含义也略有不同：</p>\n<ul>\n<li>对于某个principal个体而言，他的credential就是他的password</li>\n<li>在kerberos认证的环节中，credential就意味着各种各样的ticket</li>\n</ul>\n<h2 id=\"基本操作\"><a href=\"#基本操作\" class=\"headerlink\" title=\"基本操作\"></a>基本操作</h2><p>客户端获取票据<br>kinit -kt /path/to/hadoop.keytab hadoop/主机名@HADOOP.COM<br>kinit对应的是向kdc获取TGT的步骤。它会向/etc/krb5.conf中指定的kdc server来发送请求。<br>再执行klist查看TGT请求结果</p>\n<h1 id=\"System-Security-Services-Dameon-SSSD\"><a href=\"#System-Security-Services-Dameon-SSSD\" class=\"headerlink\" title=\"System Security Services Dameon (SSSD)\"></a>System Security Services Dameon (SSSD)</h1><p>一个守护进程，该进程可以用来访问多种验证服务器，如LDAP，Kerberos等，并提供授权。SSSD是介于本地用户和数据存储之间的进程，本地客户端首先连接SSSD，再由SSSD联系外部资源提供者(一台远程服务器)</p>\n<ul>\n<li>避免了本地每个客户端程序对认证服务器大量连接，所有本地程序仅联系SSSD，由SSSD连接认证服务器或SSSD缓存，有效的降低了负载。</li>\n<li>允许离线授权。SSSD可以缓存远程服务器的用户认证身份，这允许在远程认证服务器宕机是，继续成功授权用户访问必要的资源。</li>\n</ul>\n<p>References<br><a href=\"https://blog.csdn.net/liu16659/article/details/80997333\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/liu16659/article/details/80997333</a> </p>\n","site":{"data":{}},"excerpt":"<p>ldap+kerberos是hadoop这种多租户平台最常用的集中账号管理，认证和授权系统，本文对基本概念进行简单梳理。<br>","more":"</p>\n<h1 id=\"ldap\"><a href=\"#ldap\" class=\"headerlink\" title=\"ldap\"></a>ldap</h1><p>存储租户账号</p>\n<h1 id=\"kerberos\"><a href=\"#kerberos\" class=\"headerlink\" title=\"kerberos\"></a>kerberos</h1><p>存储租户密码及组别关系</p>\n<h2 id=\"kerberos架构\"><a href=\"#kerberos架构\" class=\"headerlink\" title=\"kerberos架构\"></a>kerberos架构</h2><p>由server,client,application组成</p>\n<h3 id=\"key-distribution-center-KDC\"><a href=\"#key-distribution-center-KDC\" class=\"headerlink\" title=\"key distribution center(KDC)\"></a>key distribution center(KDC)</h3><p>密钥分发中心，负责管理发放票据，记录授权</p>\n<h3 id=\"client\"><a href=\"#client\" class=\"headerlink\" title=\"client\"></a>client</h3><p>客户端。配置文件一般位于/etc/krb5.conf</p>\n<h3 id=\"application\"><a href=\"#application\" class=\"headerlink\" title=\"application\"></a>application</h3><p>使用kerberos进行安全认证的应用</p>\n<h2 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h2><h3 id=\"realm\"><a href=\"#realm\" class=\"headerlink\" title=\"realm\"></a>realm</h3><p>kerberos管理领域的标识</p>\n<h3 id=\"principal\"><a href=\"#principal\" class=\"headerlink\" title=\"principal\"></a>principal</h3><p>当每添加一个用户或服务的时候都需要向kdc添加一条principal，principl的形式为 主名称／实例名@领域名</p>\n<h3 id=\"password\"><a href=\"#password\" class=\"headerlink\" title=\"password\"></a>password</h3><p>客户的密码一般存在一个keytab文件中</p>\n<h3 id=\"credential\"><a href=\"#credential\" class=\"headerlink\" title=\"credential\"></a>credential</h3><p>credential是“证明某个人确定是他自己/某一种行为的确可以发生”的凭据。在不同的使用场景下， credential的具体含义也略有不同：</p>\n<ul>\n<li>对于某个principal个体而言，他的credential就是他的password</li>\n<li>在kerberos认证的环节中，credential就意味着各种各样的ticket</li>\n</ul>\n<h2 id=\"基本操作\"><a href=\"#基本操作\" class=\"headerlink\" title=\"基本操作\"></a>基本操作</h2><p>客户端获取票据<br>kinit -kt /path/to/hadoop.keytab hadoop/主机名@HADOOP.COM<br>kinit对应的是向kdc获取TGT的步骤。它会向/etc/krb5.conf中指定的kdc server来发送请求。<br>再执行klist查看TGT请求结果</p>\n<h1 id=\"System-Security-Services-Dameon-SSSD\"><a href=\"#System-Security-Services-Dameon-SSSD\" class=\"headerlink\" title=\"System Security Services Dameon (SSSD)\"></a>System Security Services Dameon (SSSD)</h1><p>一个守护进程，该进程可以用来访问多种验证服务器，如LDAP，Kerberos等，并提供授权。SSSD是介于本地用户和数据存储之间的进程，本地客户端首先连接SSSD，再由SSSD联系外部资源提供者(一台远程服务器)</p>\n<ul>\n<li>避免了本地每个客户端程序对认证服务器大量连接，所有本地程序仅联系SSSD，由SSSD连接认证服务器或SSSD缓存，有效的降低了负载。</li>\n<li>允许离线授权。SSSD可以缓存远程服务器的用户认证身份，这允许在远程认证服务器宕机是，继续成功授权用户访问必要的资源。</li>\n</ul>\n<p>References<br><a href=\"https://blog.csdn.net/liu16659/article/details/80997333\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/liu16659/article/details/80997333</a> </p>"},{"title":"ubuntu mysql修改数据存储位置","date":"2017-08-18T12:30:21.000Z","_content":"\n1 登陆mysql查看数据存储路径\n```\nmysql -uroot -p\nshow variables like '%datadir%';\n```\n\n<!-- more --> \n\n2 建立新的存储路径\n```\nmkdir -p /data/mysql\n```\n\n3 复制原有的数据到新的存储路径（不要用mv！）\n```\ncp -R /var/lib/mysql/. /data/mysql  #如果有隐藏文件要用.，不能用*\n```\n\n4 修改文件夹权限\n```\nsudo chown -R mysql:mysql /data/mysql\n```\n\n5 修改配置文件\n```\nsudo vi /etc/mysql/my.cnf\n```\n\n修改\n```\ndatadir = /data/mysql\n```\n\n\n6 修改启动文件\n```\nsudo vi /etc/apparmor.d/usr.sbin.mysqld\n```\n\n修改\n```\n/var/lib/mysql r,\n/var/lib/mysql/** rwk,\n```\n\n为\n```\n/data/mysql r,\n/data/mysql/** rwk,\n```\n\n7 重启服务\n\n```\nsudo /etc/init.d/apparmor restart\nsudo /etc/init.d/mysql restart\n```","source":"_posts/ubuntu系统mysql修改数据存储位置.md","raw":"---\ntitle: ubuntu mysql修改数据存储位置\ndate: 2017-08-18 20:30:21\ncategories:\n\t - environment\ntags: [linux, mysql]\n---\n\n1 登陆mysql查看数据存储路径\n```\nmysql -uroot -p\nshow variables like '%datadir%';\n```\n\n<!-- more --> \n\n2 建立新的存储路径\n```\nmkdir -p /data/mysql\n```\n\n3 复制原有的数据到新的存储路径（不要用mv！）\n```\ncp -R /var/lib/mysql/. /data/mysql  #如果有隐藏文件要用.，不能用*\n```\n\n4 修改文件夹权限\n```\nsudo chown -R mysql:mysql /data/mysql\n```\n\n5 修改配置文件\n```\nsudo vi /etc/mysql/my.cnf\n```\n\n修改\n```\ndatadir = /data/mysql\n```\n\n\n6 修改启动文件\n```\nsudo vi /etc/apparmor.d/usr.sbin.mysqld\n```\n\n修改\n```\n/var/lib/mysql r,\n/var/lib/mysql/** rwk,\n```\n\n为\n```\n/data/mysql r,\n/data/mysql/** rwk,\n```\n\n7 重启服务\n\n```\nsudo /etc/init.d/apparmor restart\nsudo /etc/init.d/mysql restart\n```","slug":"ubuntu系统mysql修改数据存储位置","published":1,"updated":"2020-05-05T11:13:37.722Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9ttxjao001b83lzdqeh2x58","content":"<p>1 登陆mysql查看数据存储路径<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql -uroot -p</span><br><span class=\"line\">show variables like &apos;%datadir%&apos;;</span><br></pre></td></tr></table></figure></p>\n<a id=\"more\"></a> \n<p>2 建立新的存储路径<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -p /data/mysql</span><br></pre></td></tr></table></figure></p>\n<p>3 复制原有的数据到新的存储路径（不要用mv！）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp -R /var/lib/mysql/. /data/mysql  #如果有隐藏文件要用.，不能用*</span><br></pre></td></tr></table></figure></p>\n<p>4 修改文件夹权限<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo chown -R mysql:mysql /data/mysql</span><br></pre></td></tr></table></figure></p>\n<p>5 修改配置文件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vi /etc/mysql/my.cnf</span><br></pre></td></tr></table></figure></p>\n<p>修改<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">datadir = /data/mysql</span><br></pre></td></tr></table></figure></p>\n<p>6 修改启动文件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vi /etc/apparmor.d/usr.sbin.mysqld</span><br></pre></td></tr></table></figure></p>\n<p>修改<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/var/lib/mysql r,</span><br><span class=\"line\">/var/lib/mysql/** rwk,</span><br></pre></td></tr></table></figure></p>\n<p>为<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/data/mysql r,</span><br><span class=\"line\">/data/mysql/** rwk,</span><br></pre></td></tr></table></figure></p>\n<p>7 重启服务</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo /etc/init.d/apparmor restart</span><br><span class=\"line\">sudo /etc/init.d/mysql restart</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>1 登陆mysql查看数据存储路径<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql -uroot -p</span><br><span class=\"line\">show variables like &apos;%datadir%&apos;;</span><br></pre></td></tr></table></figure></p>","more":"<p>2 建立新的存储路径<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -p /data/mysql</span><br></pre></td></tr></table></figure></p>\n<p>3 复制原有的数据到新的存储路径（不要用mv！）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp -R /var/lib/mysql/. /data/mysql  #如果有隐藏文件要用.，不能用*</span><br></pre></td></tr></table></figure></p>\n<p>4 修改文件夹权限<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo chown -R mysql:mysql /data/mysql</span><br></pre></td></tr></table></figure></p>\n<p>5 修改配置文件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vi /etc/mysql/my.cnf</span><br></pre></td></tr></table></figure></p>\n<p>修改<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">datadir = /data/mysql</span><br></pre></td></tr></table></figure></p>\n<p>6 修改启动文件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vi /etc/apparmor.d/usr.sbin.mysqld</span><br></pre></td></tr></table></figure></p>\n<p>修改<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/var/lib/mysql r,</span><br><span class=\"line\">/var/lib/mysql/** rwk,</span><br></pre></td></tr></table></figure></p>\n<p>为<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/data/mysql r,</span><br><span class=\"line\">/data/mysql/** rwk,</span><br></pre></td></tr></table></figure></p>\n<p>7 重启服务</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo /etc/init.d/apparmor restart</span><br><span class=\"line\">sudo /etc/init.d/mysql restart</span><br></pre></td></tr></table></figure>"},{"title":"记事本编码问题小记","date":"2017-04-02T08:21:52.000Z","_content":"最近在跑论文实验，经常需要进行一些文本的存储和转移，一般都是用python写个脚本来处理。在这个过程中大的问题还没遇到过，但一些小坑还是经常会踩，而且好几次明明是上次遇到过但又忘了，解决的过程还是很浪费时间的。所以把它们记录下来，避免下次遇到类似情况的时候还要去查。\n\n感觉python3.x对中文还是比较友好的。\n\n1 关于Windows记事本的ANSI,Unicode,UTF-8三种编码模式\n看了一篇知乎的回答，感觉讲的很明白。https://www.zhihu.com/question/20650946\nANSI：对应当前系统 locale 的遗留（legacy）编码。\nUnicode:带有 BOM 的小端序 UTF-16。\nUTF-8:带 BOM 的 UTF-8.\n<!-- more --> \n注：所谓BOM，即字节序标记(Byte Order Mark)，是Unicode规范中的概念，Windows就是使用BOM来标记文本文件的编码方式的。\n\n之前以为把txt文件保存为UTF-8就万事大吉了，直到用Python把txt中的内容读出并print出来后发现每个文件内容开头都有一个“ufeff”字符串，查了之后才知道原来记事本保存的UTF-8是带BOM的UTF-8。这个小问题有时候还是会影响文本处理的，解决的办法是用专业的文本编辑器打开，然后保存为不带BOM的UTF-8格式。如果要批处理的话到网上下个小程序好了。\n\n知乎回答中说UTF-8是兼容性最好的编码，为解决Window的BOM问题建议尽量用专业文本编辑器不要用记事本。\n\n转载：\nASCII是古老的编码，那个时候还不区分字符集和编码，基本可以看作合二为一的东西。\nUnicode严格来说是字符集，可以有多种编码。\nUTF-8是一种Unicode的编码。\n\n2 txt文件编码批量转换\n之前有时候需要进行一些文件的批量转码，比如ANSI转UTF-8，不过既然记事本的UTF-8编码是带BOM的这好像也没什么用了，还是用其他工具来转化吧。\n```\n    of=open(openFilePath,\"r\",encoding='gb18030')\n    sf=open(saveFilePath,\"w\",encoding=\"utf-8\")\n    sf.write(of.read())\n```\n\n3 文件夹中文件的遍历\n```\n\timport ps\n\tpath='xxx'\n\tfiles=os.listdir(path)\n\tfor file in files:\n\t\tf=open(path+file,'r',encoding='utf-8')\n\t\txxx\n```","source":"_posts/记事本编码问题小记.md","raw":"---\ntitle: 记事本编码问题小记\ndate: 2017-04-02 16:21:52\ncategories:\n\t - environment\ntags: tool\n---\n最近在跑论文实验，经常需要进行一些文本的存储和转移，一般都是用python写个脚本来处理。在这个过程中大的问题还没遇到过，但一些小坑还是经常会踩，而且好几次明明是上次遇到过但又忘了，解决的过程还是很浪费时间的。所以把它们记录下来，避免下次遇到类似情况的时候还要去查。\n\n感觉python3.x对中文还是比较友好的。\n\n1 关于Windows记事本的ANSI,Unicode,UTF-8三种编码模式\n看了一篇知乎的回答，感觉讲的很明白。https://www.zhihu.com/question/20650946\nANSI：对应当前系统 locale 的遗留（legacy）编码。\nUnicode:带有 BOM 的小端序 UTF-16。\nUTF-8:带 BOM 的 UTF-8.\n<!-- more --> \n注：所谓BOM，即字节序标记(Byte Order Mark)，是Unicode规范中的概念，Windows就是使用BOM来标记文本文件的编码方式的。\n\n之前以为把txt文件保存为UTF-8就万事大吉了，直到用Python把txt中的内容读出并print出来后发现每个文件内容开头都有一个“ufeff”字符串，查了之后才知道原来记事本保存的UTF-8是带BOM的UTF-8。这个小问题有时候还是会影响文本处理的，解决的办法是用专业的文本编辑器打开，然后保存为不带BOM的UTF-8格式。如果要批处理的话到网上下个小程序好了。\n\n知乎回答中说UTF-8是兼容性最好的编码，为解决Window的BOM问题建议尽量用专业文本编辑器不要用记事本。\n\n转载：\nASCII是古老的编码，那个时候还不区分字符集和编码，基本可以看作合二为一的东西。\nUnicode严格来说是字符集，可以有多种编码。\nUTF-8是一种Unicode的编码。\n\n2 txt文件编码批量转换\n之前有时候需要进行一些文件的批量转码，比如ANSI转UTF-8，不过既然记事本的UTF-8编码是带BOM的这好像也没什么用了，还是用其他工具来转化吧。\n```\n    of=open(openFilePath,\"r\",encoding='gb18030')\n    sf=open(saveFilePath,\"w\",encoding=\"utf-8\")\n    sf.write(of.read())\n```\n\n3 文件夹中文件的遍历\n```\n\timport ps\n\tpath='xxx'\n\tfiles=os.listdir(path)\n\tfor file in files:\n\t\tf=open(path+file,'r',encoding='utf-8')\n\t\txxx\n```","slug":"记事本编码问题小记","published":1,"updated":"2020-05-05T11:13:37.723Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9ttxjap001g83lzb6uf238a","content":"<p>最近在跑论文实验，经常需要进行一些文本的存储和转移，一般都是用python写个脚本来处理。在这个过程中大的问题还没遇到过，但一些小坑还是经常会踩，而且好几次明明是上次遇到过但又忘了，解决的过程还是很浪费时间的。所以把它们记录下来，避免下次遇到类似情况的时候还要去查。</p>\n<p>感觉python3.x对中文还是比较友好的。</p>\n<p>1 关于Windows记事本的ANSI,Unicode,UTF-8三种编码模式<br>看了一篇知乎的回答，感觉讲的很明白。<a href=\"https://www.zhihu.com/question/20650946\" target=\"_blank\" rel=\"noopener\">https://www.zhihu.com/question/20650946</a><br>ANSI：对应当前系统 locale 的遗留（legacy）编码。<br>Unicode:带有 BOM 的小端序 UTF-16。<br>UTF-8:带 BOM 的 UTF-8.<br><a id=\"more\"></a><br>注：所谓BOM，即字节序标记(Byte Order Mark)，是Unicode规范中的概念，Windows就是使用BOM来标记文本文件的编码方式的。</p>\n<p>之前以为把txt文件保存为UTF-8就万事大吉了，直到用Python把txt中的内容读出并print出来后发现每个文件内容开头都有一个“ufeff”字符串，查了之后才知道原来记事本保存的UTF-8是带BOM的UTF-8。这个小问题有时候还是会影响文本处理的，解决的办法是用专业的文本编辑器打开，然后保存为不带BOM的UTF-8格式。如果要批处理的话到网上下个小程序好了。</p>\n<p>知乎回答中说UTF-8是兼容性最好的编码，为解决Window的BOM问题建议尽量用专业文本编辑器不要用记事本。</p>\n<p>转载：<br>ASCII是古老的编码，那个时候还不区分字符集和编码，基本可以看作合二为一的东西。<br>Unicode严格来说是字符集，可以有多种编码。<br>UTF-8是一种Unicode的编码。</p>\n<p>2 txt文件编码批量转换<br>之前有时候需要进行一些文件的批量转码，比如ANSI转UTF-8，不过既然记事本的UTF-8编码是带BOM的这好像也没什么用了，还是用其他工具来转化吧。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">of=open(openFilePath,&quot;r&quot;,encoding=&apos;gb18030&apos;)</span><br><span class=\"line\">sf=open(saveFilePath,&quot;w&quot;,encoding=&quot;utf-8&quot;)</span><br><span class=\"line\">sf.write(of.read())</span><br></pre></td></tr></table></figure></p>\n<p>3 文件夹中文件的遍历<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import ps</span><br><span class=\"line\">path=&apos;xxx&apos;</span><br><span class=\"line\">files=os.listdir(path)</span><br><span class=\"line\">for file in files:</span><br><span class=\"line\">\tf=open(path+file,&apos;r&apos;,encoding=&apos;utf-8&apos;)</span><br><span class=\"line\">\txxx</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<p>最近在跑论文实验，经常需要进行一些文本的存储和转移，一般都是用python写个脚本来处理。在这个过程中大的问题还没遇到过，但一些小坑还是经常会踩，而且好几次明明是上次遇到过但又忘了，解决的过程还是很浪费时间的。所以把它们记录下来，避免下次遇到类似情况的时候还要去查。</p>\n<p>感觉python3.x对中文还是比较友好的。</p>\n<p>1 关于Windows记事本的ANSI,Unicode,UTF-8三种编码模式<br>看了一篇知乎的回答，感觉讲的很明白。<a href=\"https://www.zhihu.com/question/20650946\" target=\"_blank\" rel=\"noopener\">https://www.zhihu.com/question/20650946</a><br>ANSI：对应当前系统 locale 的遗留（legacy）编码。<br>Unicode:带有 BOM 的小端序 UTF-16。<br>UTF-8:带 BOM 的 UTF-8.<br>","more":"<br>注：所谓BOM，即字节序标记(Byte Order Mark)，是Unicode规范中的概念，Windows就是使用BOM来标记文本文件的编码方式的。</p>\n<p>之前以为把txt文件保存为UTF-8就万事大吉了，直到用Python把txt中的内容读出并print出来后发现每个文件内容开头都有一个“ufeff”字符串，查了之后才知道原来记事本保存的UTF-8是带BOM的UTF-8。这个小问题有时候还是会影响文本处理的，解决的办法是用专业的文本编辑器打开，然后保存为不带BOM的UTF-8格式。如果要批处理的话到网上下个小程序好了。</p>\n<p>知乎回答中说UTF-8是兼容性最好的编码，为解决Window的BOM问题建议尽量用专业文本编辑器不要用记事本。</p>\n<p>转载：<br>ASCII是古老的编码，那个时候还不区分字符集和编码，基本可以看作合二为一的东西。<br>Unicode严格来说是字符集，可以有多种编码。<br>UTF-8是一种Unicode的编码。</p>\n<p>2 txt文件编码批量转换<br>之前有时候需要进行一些文件的批量转码，比如ANSI转UTF-8，不过既然记事本的UTF-8编码是带BOM的这好像也没什么用了，还是用其他工具来转化吧。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">of=open(openFilePath,&quot;r&quot;,encoding=&apos;gb18030&apos;)</span><br><span class=\"line\">sf=open(saveFilePath,&quot;w&quot;,encoding=&quot;utf-8&quot;)</span><br><span class=\"line\">sf.write(of.read())</span><br></pre></td></tr></table></figure></p>\n<p>3 文件夹中文件的遍历<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import ps</span><br><span class=\"line\">path=&apos;xxx&apos;</span><br><span class=\"line\">files=os.listdir(path)</span><br><span class=\"line\">for file in files:</span><br><span class=\"line\">\tf=open(path+file,&apos;r&apos;,encoding=&apos;utf-8&apos;)</span><br><span class=\"line\">\txxx</span><br></pre></td></tr></table></figure></p>"}],"PostAsset":[],"PostCategory":[{"post_id":"ck9ttxj9w000083lzf3dvq49r","category_id":"ck9ttxja1000483lzjyuwmyb9","_id":"ck9ttxjab000f83lzkytvsne3"},{"post_id":"ck9ttxj9z000283lzl63a1grs","category_id":"ck9ttxja6000a83lzvx08cnyo","_id":"ck9ttxjad000k83lzmb5z0uk8"},{"post_id":"ck9ttxja3000683lzcogtzjw7","category_id":"ck9ttxjab000g83lzh7zyln69","_id":"ck9ttxjag000r83lznist3c28"},{"post_id":"ck9ttxjad000j83lzlha7g3kd","category_id":"ck9ttxja6000a83lzvx08cnyo","_id":"ck9ttxjah000v83lzj5xzafi2"},{"post_id":"ck9ttxjae000n83lzn9mlugh7","category_id":"ck9ttxjad000l83lzzrw6yent","_id":"ck9ttxjaj000y83lz0vd70wn2"},{"post_id":"ck9ttxja4000883lz6rpfxxnp","category_id":"ck9ttxjad000l83lzzrw6yent","_id":"ck9ttxjal001283lz8d8ckm5z"},{"post_id":"ck9ttxja6000983lzl9olyb4g","category_id":"ck9ttxjad000l83lzzrw6yent","_id":"ck9ttxjam001583lzk0rqieml"},{"post_id":"ck9ttxjak001083lz1n8qtash","category_id":"ck9ttxja6000a83lzvx08cnyo","_id":"ck9ttxjao001983lzwas4ic8r"},{"post_id":"ck9ttxja7000d83lzkp7m49db","category_id":"ck9ttxjad000l83lzzrw6yent","_id":"ck9ttxjao001c83lze2jtmmsj"},{"post_id":"ck9ttxjal001383lza5m99ubn","category_id":"ck9ttxja6000a83lzvx08cnyo","_id":"ck9ttxjap001h83lzys3ne630"},{"post_id":"ck9ttxjam001683lzferjl4mk","category_id":"ck9ttxja6000a83lzvx08cnyo","_id":"ck9ttxjaq001j83lzfa0itz1t"},{"post_id":"ck9ttxjaa000e83lzah61pkzn","category_id":"ck9ttxjam001483lzl1xiy38n","_id":"ck9ttxjaq001m83lzvwd8vorl"},{"post_id":"ck9ttxjao001b83lzdqeh2x58","category_id":"ck9ttxja6000a83lzvx08cnyo","_id":"ck9ttxjar001o83lziopumxd2"},{"post_id":"ck9ttxjap001g83lzb6uf238a","category_id":"ck9ttxja6000a83lzvx08cnyo","_id":"ck9ttxjar001s83lzo2mz5t7w"},{"post_id":"ck9ttxjaf000p83lz1nrkc6jq","category_id":"ck9ttxjao001d83lzj5surov2","_id":"ck9ttxjar001t83lzna7is4ox"},{"post_id":"ck9ttxjag000u83lzf2mk2nih","category_id":"ck9ttxjaq001k83lzgn75sf7a","_id":"ck9ttxjas001w83lzc6aa1b76"},{"post_id":"ck9ttxjai000x83lzwgcvomzu","category_id":"ck9ttxjaq001k83lzgn75sf7a","_id":"ck9ttxjas001y83lz05xs151s"},{"post_id":"ck9ttxjan001883lz2ubawu49","category_id":"ck9ttxjao001d83lzj5surov2","_id":"ck9ttxjat002183lznsdi627e"}],"PostTag":[{"post_id":"ck9ttxj9w000083lzf3dvq49r","tag_id":"ck9ttxja2000583lzyxgm5rjc","_id":"ck9ttxja7000c83lz4ynyw2n3"},{"post_id":"ck9ttxj9z000283lzl63a1grs","tag_id":"ck9ttxja6000b83lz4s1e9ec6","_id":"ck9ttxjaf000o83lz9k93xcfb"},{"post_id":"ck9ttxj9z000283lzl63a1grs","tag_id":"ck9ttxjab000h83lz7q7wmtpa","_id":"ck9ttxjag000q83lztziogy4r"},{"post_id":"ck9ttxjaf000p83lz1nrkc6jq","tag_id":"ck9ttxjad000m83lzbwcc5td0","_id":"ck9ttxjah000w83lzdv9dqu1v"},{"post_id":"ck9ttxja3000683lzcogtzjw7","tag_id":"ck9ttxjad000m83lzbwcc5td0","_id":"ck9ttxjao001a83lzyxq0kqer"},{"post_id":"ck9ttxja3000683lzcogtzjw7","tag_id":"ck9ttxjag000t83lzzzrbwj0x","_id":"ck9ttxjao001e83lzqkb5qi3j"},{"post_id":"ck9ttxja3000683lzcogtzjw7","tag_id":"ck9ttxjal001183lz32g6eegi","_id":"ck9ttxjap001i83lzpje2z3ge"},{"post_id":"ck9ttxja4000883lz6rpfxxnp","tag_id":"ck9ttxjad000m83lzbwcc5td0","_id":"ck9ttxjaq001n83lzj94co1de"},{"post_id":"ck9ttxja4000883lz6rpfxxnp","tag_id":"ck9ttxjap001f83lzhb36cm6g","_id":"ck9ttxjar001p83lz9022sb7z"},{"post_id":"ck9ttxja6000983lzl9olyb4g","tag_id":"ck9ttxjad000m83lzbwcc5td0","_id":"ck9ttxjas001x83lzkp1qrpz4"},{"post_id":"ck9ttxja6000983lzl9olyb4g","tag_id":"ck9ttxjar001r83lzojh0kmgk","_id":"ck9ttxjas001z83lz1f7wly3u"},{"post_id":"ck9ttxja7000d83lzkp7m49db","tag_id":"ck9ttxjad000m83lzbwcc5td0","_id":"ck9ttxjat002383lzhaax81f4"},{"post_id":"ck9ttxja7000d83lzkp7m49db","tag_id":"ck9ttxjat002083lz138ulrca","_id":"ck9ttxjat002483lztozeg8eb"},{"post_id":"ck9ttxjaa000e83lzah61pkzn","tag_id":"ck9ttxjat002283lzsa1p4dm5","_id":"ck9ttxjau002783lzzxlp1vrj"},{"post_id":"ck9ttxjaa000e83lzah61pkzn","tag_id":"ck9ttxjat002583lz799tcaul","_id":"ck9ttxjau002883lz8fv4hmou"},{"post_id":"ck9ttxjad000j83lzlha7g3kd","tag_id":"ck9ttxjau002683lzmeokvcm6","_id":"ck9ttxjaw002c83lzqvqw9qxp"},{"post_id":"ck9ttxjad000j83lzlha7g3kd","tag_id":"ck9ttxjau002983lzjlwahxjb","_id":"ck9ttxjaw002d83lzcrljrb2u"},{"post_id":"ck9ttxjad000j83lzlha7g3kd","tag_id":"ck9ttxjad000m83lzbwcc5td0","_id":"ck9ttxjaw002f83lzf7f9isdc"},{"post_id":"ck9ttxjae000n83lzn9mlugh7","tag_id":"ck9ttxjad000m83lzbwcc5td0","_id":"ck9ttxjaw002g83lzqzjfbycz"},{"post_id":"ck9ttxjae000n83lzn9mlugh7","tag_id":"ck9ttxjap001f83lzhb36cm6g","_id":"ck9ttxjax002i83lz8s85jm49"},{"post_id":"ck9ttxjag000u83lzf2mk2nih","tag_id":"ck9ttxjaw002e83lzcxj19ede","_id":"ck9ttxjax002j83lz58qt0hle"},{"post_id":"ck9ttxjai000x83lzwgcvomzu","tag_id":"ck9ttxjaw002e83lzcxj19ede","_id":"ck9ttxjax002l83lzqrsq6eml"},{"post_id":"ck9ttxjak001083lz1n8qtash","tag_id":"ck9ttxjax002k83lzhzkutmeq","_id":"ck9ttxjay002o83lzvxi1vhqi"},{"post_id":"ck9ttxjak001083lz1n8qtash","tag_id":"ck9ttxjax002m83lzwk7yteiv","_id":"ck9ttxjay002p83lz2oq99pwi"},{"post_id":"ck9ttxjal001383lza5m99ubn","tag_id":"ck9ttxjat002283lzsa1p4dm5","_id":"ck9ttxjay002t83lzwi4es5mn"},{"post_id":"ck9ttxjal001383lza5m99ubn","tag_id":"ck9ttxjax002m83lzwk7yteiv","_id":"ck9ttxjaz002u83lzc882digv"},{"post_id":"ck9ttxjal001383lza5m99ubn","tag_id":"ck9ttxjay002r83lzip6lid40","_id":"ck9ttxjaz002w83lzw9qca4wm"},{"post_id":"ck9ttxjam001683lzferjl4mk","tag_id":"ck9ttxjat002283lzsa1p4dm5","_id":"ck9ttxjaz002y83lzvjg5p2fr"},{"post_id":"ck9ttxjam001683lzferjl4mk","tag_id":"ck9ttxjaw002e83lzcxj19ede","_id":"ck9ttxjaz002z83lzqwa9h0hd"},{"post_id":"ck9ttxjan001883lz2ubawu49","tag_id":"ck9ttxja2000583lzyxgm5rjc","_id":"ck9ttxjb0003183lzkkklec4m"},{"post_id":"ck9ttxjan001883lz2ubawu49","tag_id":"ck9ttxjat002283lzsa1p4dm5","_id":"ck9ttxjb0003283lzd9wqo4l6"},{"post_id":"ck9ttxjao001b83lzdqeh2x58","tag_id":"ck9ttxjat002283lzsa1p4dm5","_id":"ck9ttxjb0003583lzmazkd02v"},{"post_id":"ck9ttxjao001b83lzdqeh2x58","tag_id":"ck9ttxjaw002e83lzcxj19ede","_id":"ck9ttxjb0003683lz5b42edhz"},{"post_id":"ck9ttxjap001g83lzb6uf238a","tag_id":"ck9ttxjb0003483lzbvjxtuof","_id":"ck9ttxjb0003783lz0nedxz98"}],"Tag":[{"name":"Hadoop","_id":"ck9ttxja2000583lzyxgm5rjc"},{"name":"hexo","_id":"ck9ttxja6000b83lz4s1e9ec6"},{"name":"github","_id":"ck9ttxjab000h83lz7q7wmtpa"},{"name":"java","_id":"ck9ttxjad000m83lzbwcc5td0"},{"name":"testing","_id":"ck9ttxjag000t83lzzzrbwj0x"},{"name":"JMockit","_id":"ck9ttxjal001183lz32g6eegi"},{"name":"jvm","_id":"ck9ttxjap001f83lzhb36cm6g"},{"name":"reflect","_id":"ck9ttxjar001r83lzojh0kmgk"},{"name":"exception","_id":"ck9ttxjat002083lz138ulrca"},{"name":"linux","_id":"ck9ttxjat002283lzsa1p4dm5"},{"name":"docker","_id":"ck9ttxjat002583lz799tcaul"},{"name":"web","_id":"ck9ttxjau002683lzmeokvcm6"},{"name":"eclipse","_id":"ck9ttxjau002983lzjlwahxjb"},{"name":"mysql","_id":"ck9ttxjaw002e83lzcxj19ede"},{"name":"ubuntu","_id":"ck9ttxjax002k83lzhzkutmeq"},{"name":"python","_id":"ck9ttxjax002m83lzwk7yteiv"},{"name":"deeplearning","_id":"ck9ttxjay002r83lzip6lid40"},{"name":"tool","_id":"ck9ttxjb0003483lzbvjxtuof"}]}}